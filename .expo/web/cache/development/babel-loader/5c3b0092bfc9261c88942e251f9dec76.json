{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { TabActions } from '@react-navigation/native';\nexport function jumpTo(_ref) {\n  var routeName = _ref.routeName,\n      key = _ref.key;\n\n  if (key === undefined) {\n    return TabActions.jumpTo(routeName);\n  } else {\n    return _objectSpread({}, TabActions.jumpTo(routeName), {\n      target: key\n    });\n  }\n}","map":{"version":3,"sources":["SwitchActions.tsx"],"names":["key","TabActions","target"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,UAAA,QAAA,0BAAA;AAEA,OAAO,SAAA,MAAA,CAAA,IAAA,EAMW;AAAA,MANK,SAML,GAAA,IAAA,CANK,SAML;AAAA,MAJhBA,GAIgB,GAAA,IAAA,CAJhBA,GAIgB;;AAChB,MAAIA,GAAG,KAAP,SAAA,EAAuB;AACrB,WAAOC,UAAU,CAAVA,MAAAA,CAAP,SAAOA,CAAP;AADF,GAAA,MAEO;AACL,WAAA,aAAA,CAAA,EAAA,EACKA,UAAU,CAAVA,MAAAA,CADL,SACKA,CADL,EAAA;AAEEC,MAAAA,MAAM,EAAEF;AAFV,KAAA,CAAA;AAID;AACF","sourcesContent":["import { TabActions, TabActionType } from '@react-navigation/native';\n\nexport function jumpTo({\n  routeName,\n  key,\n}: {\n  routeName: string;\n  key?: string;\n}): TabActionType {\n  if (key === undefined) {\n    return TabActions.jumpTo(routeName);\n  } else {\n    return {\n      ...TabActions.jumpTo(routeName),\n      target: key,\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}