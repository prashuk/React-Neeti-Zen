{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/prashuk/Desktop/GitHub/React-Neeti-Zen/android_app/components/Sheet.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Block, Button } from \"galio-framework\";\nimport * as ImagePicker from \"expo-image-picker\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar Sheet = function (_React$Component) {\n  _inherits(Sheet, _React$Component);\n\n  var _super = _createSuper(Sheet);\n\n  function Sheet(props) {\n    var _this;\n\n    _classCallCheck(this, Sheet);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      image: \"\"\n    };\n\n    _this.pickImageFromGallery = function _callee() {\n      var result;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.All,\n                allowsEditing: true,\n                aspect: [4, 3],\n                quality: 1\n              }));\n\n            case 2:\n              result = _context.sent;\n\n              if (!result.cancelled) {\n                _this.setState({\n                  image: result.uri\n                });\n\n                _this.props.imageSelect(_this.state.image);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(Sheet, [{\n    key: \"render\",\n    value: function render() {\n      var navigation = this.props.navigation;\n      return React.createElement(Block, {\n        flex: true,\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }, React.createElement(Block, {\n        center: true,\n        style: {\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, React.createElement(Button, {\n        style: styles.button,\n        color: \"#4f3961\",\n        onPress: this.pickImageFromGallery,\n        textStyle: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, \"Open Gallery\")), React.createElement(Block, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, React.createElement(Button, {\n        style: styles.button,\n        color: \"#4f3961\",\n        onPress: function onPress() {\n          navigation.navigate(\"Camera\");\n        },\n        textStyle: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, \"Open Camera\")));\n    }\n  }]);\n\n  return Sheet;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#fff2ff\",\n    height: height,\n    width: width\n  },\n  button: {\n    width: width - 40,\n    height: 50,\n    shadowRadius: 10,\n    shadowOpacity: 0,\n    marginBottom: 10\n  },\n  title: {\n    marginTop: 20,\n    marginRight: 30,\n    marginLeft: 30\n  }\n});\nexport default Sheet;","map":{"version":3,"sources":["/Users/prashuk/Desktop/GitHub/React-Neeti-Zen/android_app/components/Sheet.js"],"names":["React","Block","Button","ImagePicker","Dimensions","get","height","width","Sheet","props","state","image","pickImageFromGallery","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","setState","uri","imageSelect","navigation","styles","container","marginTop","button","color","navigate","Component","StyleSheet","create","backgroundColor","shadowRadius","shadowOpacity","marginBottom","title","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { StyleSheet, Dimensions } from \"react-native\";\nimport { Block, Button } from \"galio-framework\";\nimport * as ImagePicker from \"expo-image-picker\";\n\nconst { height, width } = Dimensions.get(\"screen\");\n\nclass Sheet extends React.Component {\n  state = {\n    image: \"\",\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  pickImageFromGallery = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    if (!result.cancelled) {\n      this.setState({ image: result.uri });\n      this.props.imageSelect(this.state.image);\n    }\n  };\n\n  render() {\n    const { navigation } = this.props;\n    return (\n      <Block flex style={styles.container}>\n        <Block center style={{ marginTop: 20 }}>\n          <Button\n            style={styles.button}\n            color=\"#4f3961\"\n            onPress={this.pickImageFromGallery}\n            textStyle={{ color: \"white\" }}\n          >\n            Open Gallery\n          </Button>\n        </Block>\n        <Block center>\n          <Button\n            style={styles.button}\n            color=\"#4f3961\"\n            onPress={() => {\n              navigation.navigate(\"Camera\");\n            }}\n            textStyle={{ color: \"white\" }}\n          >\n            Open Camera\n          </Button>\n        </Block>\n      </Block>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#fff2ff\",\n    height: height,\n    width: width,\n  },\n  button: {\n    width: width - 40,\n    height: 50,\n    shadowRadius: 10,\n    shadowOpacity: 0,\n    marginBottom: 10,\n  },\n  title: {\n    marginTop: 20,\n    marginRight: 30,\n    marginLeft: 30,\n  },\n});\n\nexport default Sheet;\n"]},"metadata":{},"sourceType":"module"}