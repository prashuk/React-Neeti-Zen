{"ast":null,"code":"'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/prashuk/Desktop/Github/Neeti-Zen/android_app/node_modules/react-native-modal-dropdown/components/ModalDropdown.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ListView from \"deprecated-react-native-listview\";\nimport PropTypes from 'prop-types';\nvar TOUCHABLE_ELEMENTS = ['TouchableHighlight', 'TouchableOpacity', 'TouchableWithoutFeedback', 'TouchableNativeFeedback'];\n\nvar ModalDropdown = function (_Component) {\n  _inherits(ModalDropdown, _Component);\n\n  var _super = _createSuper(ModalDropdown);\n\n  function ModalDropdown(_props) {\n    var _this;\n\n    _classCallCheck(this, ModalDropdown);\n\n    _this = _super.call(this, _props);\n\n    _this._onButtonPress = function () {\n      var onDropdownWillShow = _this.props.onDropdownWillShow;\n\n      if (!onDropdownWillShow || onDropdownWillShow() !== false) {\n        _this.show();\n      }\n    };\n\n    _this._onRequestClose = function () {\n      var onDropdownWillHide = _this.props.onDropdownWillHide;\n\n      if (!onDropdownWillHide || onDropdownWillHide() !== false) {\n        _this.hide();\n      }\n    };\n\n    _this._onModalPress = function () {\n      var onDropdownWillHide = _this.props.onDropdownWillHide;\n\n      if (!onDropdownWillHide || onDropdownWillHide() !== false) {\n        _this.hide();\n      }\n    };\n\n    _this._renderRow = function (rowData, sectionID, rowID, highlightRow) {\n      var _this$props = _this.props,\n          renderRow = _this$props.renderRow,\n          dropdownTextStyle = _this$props.dropdownTextStyle,\n          dropdownTextHighlightStyle = _this$props.dropdownTextHighlightStyle,\n          accessible = _this$props.accessible;\n      var selectedIndex = _this.state.selectedIndex;\n      var key = \"row_\" + rowID;\n      var highlighted = rowID == selectedIndex;\n      var row = !renderRow ? React.createElement(Text, {\n        style: [styles.rowText, dropdownTextStyle, highlighted && styles.highlightedRowText, highlighted && dropdownTextHighlightStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 8\n        }\n      }, rowData) : renderRow(rowData, rowID, highlighted);\n      var preservedProps = {\n        key: key,\n        accessible: accessible,\n        onPress: function onPress() {\n          return _this._onRowPress(rowData, sectionID, rowID, highlightRow);\n        }\n      };\n\n      if (TOUCHABLE_ELEMENTS.find(function (name) {\n        return name == row.type.displayName;\n      })) {\n        var props = _objectSpread({}, row.props);\n\n        props.key = preservedProps.key;\n        props.onPress = preservedProps.onPress;\n        var children = row.props.children;\n\n        switch (row.type.displayName) {\n          case 'TouchableHighlight':\n            {\n              return React.createElement(TouchableHighlight, _extends({}, props, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 13\n                }\n              }), children);\n            }\n\n          case 'TouchableOpacity':\n            {\n              return React.createElement(TouchableOpacity, _extends({}, props, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 13\n                }\n              }), children);\n            }\n\n          case 'TouchableWithoutFeedback':\n            {\n              return React.createElement(TouchableWithoutFeedback, _extends({}, props, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 13\n                }\n              }), children);\n            }\n\n          case 'TouchableNativeFeedback':\n            {\n              return React.createElement(TouchableNativeFeedback, _extends({}, props, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 13\n                }\n              }), children);\n            }\n\n          default:\n            break;\n        }\n      }\n\n      return React.createElement(TouchableHighlight, _extends({}, preservedProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 7\n        }\n      }), row);\n    };\n\n    _this._renderSeparator = function (sectionID, rowID, adjacentRowHighlighted) {\n      var key = \"spr_\" + rowID;\n      return React.createElement(View, {\n        style: styles.separator,\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 7\n        }\n      });\n    };\n\n    _this._button = null;\n    _this._buttonFrame = null;\n    _this._nextValue = null;\n    _this._nextIndex = null;\n    _this.state = {\n      accessible: !!_props.accessible,\n      loading: !_props.options,\n      showDropdown: false,\n      buttonText: _props.defaultValue,\n      selectedIndex: _props.defaultIndex\n    };\n    return _this;\n  }\n\n  _createClass(ModalDropdown, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this$state = this.state,\n          buttonText = _this$state.buttonText,\n          selectedIndex = _this$state.selectedIndex;\n      var defaultIndex = nextProps.defaultIndex,\n          defaultValue = nextProps.defaultValue,\n          options = nextProps.options;\n      buttonText = this._nextValue == null ? buttonText : this._nextValue;\n      selectedIndex = this._nextIndex == null ? selectedIndex : this._nextIndex;\n\n      if (selectedIndex < 0) {\n        selectedIndex = defaultIndex;\n\n        if (selectedIndex < 0) {\n          buttonText = defaultValue;\n        }\n      }\n\n      this._nextValue = null;\n      this._nextIndex = null;\n      this.setState({\n        loading: !options,\n        buttonText: buttonText,\n        selectedIndex: selectedIndex\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, _extends({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 7\n        }\n      }), this._renderButton(), this._renderModal());\n    }\n  }, {\n    key: \"_updatePosition\",\n    value: function _updatePosition(callback) {\n      var _this2 = this;\n\n      if (this._button && this._button.measure) {\n        this._button.measure(function (fx, fy, width, height, px, py) {\n          _this2._buttonFrame = {\n            x: px,\n            y: py,\n            w: width,\n            h: height\n          };\n          callback && callback();\n        });\n      }\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      var _this3 = this;\n\n      this._updatePosition(function () {\n        _this3.setState({\n          showDropdown: true\n        });\n      });\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.setState({\n        showDropdown: false\n      });\n    }\n  }, {\n    key: \"select\",\n    value: function select(idx) {\n      var _this$props2 = this.props,\n          defaultValue = _this$props2.defaultValue,\n          options = _this$props2.options,\n          defaultIndex = _this$props2.defaultIndex,\n          renderButtonText = _this$props2.renderButtonText;\n      var value = defaultValue;\n\n      if (idx == null || !options || idx >= options.length) {\n        idx = defaultIndex;\n      }\n\n      if (idx >= 0) {\n        value = renderButtonText ? renderButtonText(options[idx]) : options[idx].toString();\n      }\n\n      this._nextValue = value;\n      this._nextIndex = idx;\n      this.setState({\n        buttonText: value,\n        selectedIndex: idx\n      });\n    }\n  }, {\n    key: \"_renderButton\",\n    value: function _renderButton() {\n      var _this4 = this;\n\n      var _this$props3 = this.props,\n          disabled = _this$props3.disabled,\n          accessible = _this$props3.accessible,\n          children = _this$props3.children,\n          textStyle = _this$props3.textStyle;\n      var buttonText = this.state.buttonText;\n      return React.createElement(TouchableOpacity, {\n        ref: function ref(button) {\n          return _this4._button = button;\n        },\n        disabled: disabled,\n        accessible: accessible,\n        onPress: this._onButtonPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 7\n        }\n      }, children || React.createElement(View, {\n        style: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: [styles.buttonText, textStyle],\n        numberOfLines: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }\n      }, buttonText)));\n    }\n  }, {\n    key: \"_renderModal\",\n    value: function _renderModal() {\n      var _this$props4 = this.props,\n          animated = _this$props4.animated,\n          accessible = _this$props4.accessible,\n          dropdownStyle = _this$props4.dropdownStyle;\n      var _this$state2 = this.state,\n          showDropdown = _this$state2.showDropdown,\n          loading = _this$state2.loading;\n\n      if (showDropdown && this._buttonFrame) {\n        var frameStyle = this._calcPosition();\n\n        var animationType = animated ? 'fade' : 'none';\n        return React.createElement(Modal, {\n          animationType: animationType,\n          visible: true,\n          transparent: true,\n          onRequestClose: this._onRequestClose,\n          supportedOrientations: ['portrait', 'portrait-upside-down', 'landscape', 'landscape-left', 'landscape-right'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 9\n          }\n        }, React.createElement(TouchableWithoutFeedback, {\n          accessible: accessible,\n          disabled: !showDropdown,\n          onPress: this._onModalPress,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: styles.modal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: [styles.dropdown, dropdownStyle, frameStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }\n        }, loading ? this._renderLoading() : this._renderDropdown()))));\n      }\n    }\n  }, {\n    key: \"_calcPosition\",\n    value: function _calcPosition() {\n      var _this$props5 = this.props,\n          dropdownStyle = _this$props5.dropdownStyle,\n          style = _this$props5.style,\n          adjustFrame = _this$props5.adjustFrame;\n      var dimensions = Dimensions.get('window');\n      var windowWidth = dimensions.width;\n      var windowHeight = dimensions.height;\n      var dropdownHeight = dropdownStyle && StyleSheet.flatten(dropdownStyle).height || StyleSheet.flatten(styles.dropdown).height;\n      var bottomSpace = windowHeight - this._buttonFrame.y - this._buttonFrame.h;\n      var rightSpace = windowWidth - this._buttonFrame.x;\n      var showInBottom = bottomSpace >= dropdownHeight || bottomSpace >= this._buttonFrame.y;\n      var showInLeft = rightSpace >= this._buttonFrame.x;\n      var positionStyle = {\n        height: dropdownHeight,\n        top: showInBottom ? this._buttonFrame.y + this._buttonFrame.h : Math.max(0, this._buttonFrame.y - dropdownHeight)\n      };\n\n      if (showInLeft) {\n        positionStyle.left = this._buttonFrame.x;\n      } else {\n        var dropdownWidth = dropdownStyle && StyleSheet.flatten(dropdownStyle).width || style && StyleSheet.flatten(style).width || -1;\n\n        if (dropdownWidth !== -1) {\n          positionStyle.width = dropdownWidth;\n        }\n\n        positionStyle.right = rightSpace - this._buttonFrame.w;\n      }\n\n      return adjustFrame ? adjustFrame(positionStyle) : positionStyle;\n    }\n  }, {\n    key: \"_renderLoading\",\n    value: function _renderLoading() {\n      return React.createElement(ActivityIndicator, {\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"_renderDropdown\",\n    value: function _renderDropdown() {\n      var _this$props6 = this.props,\n          scrollEnabled = _this$props6.scrollEnabled,\n          renderSeparator = _this$props6.renderSeparator,\n          showsVerticalScrollIndicator = _this$props6.showsVerticalScrollIndicator,\n          keyboardShouldPersistTaps = _this$props6.keyboardShouldPersistTaps;\n      return React.createElement(ListView, {\n        scrollEnabled: scrollEnabled,\n        style: styles.list,\n        dataSource: this._dataSource,\n        renderRow: this._renderRow,\n        renderSeparator: renderSeparator || this._renderSeparator,\n        automaticallyAdjustContentInsets: false,\n        showsVerticalScrollIndicator: showsVerticalScrollIndicator,\n        keyboardShouldPersistTaps: keyboardShouldPersistTaps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"_onRowPress\",\n    value: function _onRowPress(rowData, sectionID, rowID, highlightRow) {\n      var _this$props7 = this.props,\n          onSelect = _this$props7.onSelect,\n          renderButtonText = _this$props7.renderButtonText,\n          onDropdownWillHide = _this$props7.onDropdownWillHide;\n\n      if (!onSelect || onSelect(rowID, rowData) !== false) {\n        highlightRow(sectionID, rowID);\n        var value = renderButtonText && renderButtonText(rowData) || rowData.toString();\n        this._nextValue = value;\n        this._nextIndex = rowID;\n        this.setState({\n          buttonText: value,\n          selectedIndex: rowID\n        });\n      }\n\n      if (!onDropdownWillHide || onDropdownWillHide() !== false) {\n        this.setState({\n          showDropdown: false\n        });\n      }\n    }\n  }, {\n    key: \"_dataSource\",\n    get: function get() {\n      var options = this.props.options;\n      var ds = new ListView.DataSource({\n        rowHasChanged: function rowHasChanged(r1, r2) {\n          return r1 !== r2;\n        }\n      });\n      return ds.cloneWithRows(options);\n    }\n  }]);\n\n  return ModalDropdown;\n}(Component);\n\nModalDropdown.propTypes = {\n  disabled: PropTypes.bool,\n  scrollEnabled: PropTypes.bool,\n  defaultIndex: PropTypes.number,\n  defaultValue: PropTypes.string,\n  options: PropTypes.array,\n  accessible: PropTypes.bool,\n  animated: PropTypes.bool,\n  showsVerticalScrollIndicator: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.string,\n  style: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n  textStyle: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n  dropdownStyle: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n  dropdownTextStyle: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n  dropdownTextHighlightStyle: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n  adjustFrame: PropTypes.func,\n  renderRow: PropTypes.func,\n  renderSeparator: PropTypes.func,\n  renderButtonText: PropTypes.func,\n  onDropdownWillShow: PropTypes.func,\n  onDropdownWillHide: PropTypes.func,\n  onSelect: PropTypes.func\n};\nModalDropdown.defaultProps = {\n  disabled: false,\n  scrollEnabled: true,\n  defaultIndex: -1,\n  defaultValue: 'Please select...',\n  options: null,\n  animated: true,\n  showsVerticalScrollIndicator: true,\n  keyboardShouldPersistTaps: 'never'\n};\nexport { ModalDropdown as default };\nvar styles = StyleSheet.create({\n  button: {\n    justifyContent: 'center'\n  },\n  buttonText: {\n    fontSize: 12\n  },\n  modal: {\n    flexGrow: 1\n  },\n  dropdown: {\n    position: 'absolute',\n    height: (33 + StyleSheet.hairlineWidth) * 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: 'lightgray',\n    borderRadius: 2,\n    backgroundColor: 'white',\n    justifyContent: 'center'\n  },\n  loading: {\n    alignSelf: 'center'\n  },\n  list: {},\n  rowText: {\n    paddingHorizontal: 6,\n    paddingVertical: 10,\n    fontSize: 11,\n    color: 'gray',\n    backgroundColor: 'white',\n    textAlignVertical: 'center'\n  },\n  highlightedRowText: {\n    color: 'black'\n  },\n  separator: {\n    height: StyleSheet.hairlineWidth,\n    backgroundColor: 'lightgray'\n  }\n});","map":{"version":3,"sources":["/Users/prashuk/Desktop/Github/Neeti-Zen/android_app/node_modules/react-native-modal-dropdown/components/ModalDropdown.js"],"names":["React","Component","ListView","PropTypes","TOUCHABLE_ELEMENTS","ModalDropdown","props","_onButtonPress","onDropdownWillShow","show","_onRequestClose","onDropdownWillHide","hide","_onModalPress","_renderRow","rowData","sectionID","rowID","highlightRow","renderRow","dropdownTextStyle","dropdownTextHighlightStyle","accessible","selectedIndex","state","key","highlighted","row","styles","rowText","highlightedRowText","preservedProps","onPress","_onRowPress","find","name","type","displayName","children","_renderSeparator","adjacentRowHighlighted","separator","_button","_buttonFrame","_nextValue","_nextIndex","loading","options","showDropdown","buttonText","defaultValue","defaultIndex","nextProps","setState","_renderButton","_renderModal","callback","measure","fx","fy","width","height","px","py","x","y","w","h","_updatePosition","idx","renderButtonText","value","length","toString","disabled","textStyle","button","animated","dropdownStyle","frameStyle","_calcPosition","animationType","modal","dropdown","_renderLoading","_renderDropdown","style","adjustFrame","dimensions","Dimensions","get","windowWidth","windowHeight","dropdownHeight","StyleSheet","flatten","bottomSpace","rightSpace","showInBottom","showInLeft","positionStyle","top","Math","max","left","dropdownWidth","right","scrollEnabled","renderSeparator","showsVerticalScrollIndicator","keyboardShouldPersistTaps","list","_dataSource","onSelect","ds","DataSource","rowHasChanged","r1","r2","cloneWithRows","propTypes","bool","number","string","array","oneOfType","object","func","defaultProps","create","justifyContent","fontSize","flexGrow","position","hairlineWidth","borderWidth","borderColor","borderRadius","backgroundColor","alignSelf","paddingHorizontal","paddingVertical","color","textAlignVertical"],"mappings":"AAIA;;;;;;;;;;;;;;;;;;;AAEA,OAAOA,KAAP,IACEC,SADF,QAEO,OAFP;;;;;;;;;;;AAiBA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,kBAAkB,GAAG,CACzB,oBADyB,EAEzB,kBAFyB,EAGzB,0BAHyB,EAIzB,yBAJyB,CAA3B;;IAOqBC,a;;;;;AAwCnB,yBAAYC,MAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,MAAN;;AADiB,UAqHnBC,cArHmB,GAqHF,YAAM;AAAA,UACdC,kBADc,GACQ,MAAKF,KADb,CACdE,kBADc;;AAErB,UAAI,CAACA,kBAAD,IACFA,kBAAkB,OAAO,KAD3B,EACkC;AAChC,cAAKC,IAAL;AACD;AACF,KA3HkB;;AAAA,UA2LnBC,eA3LmB,GA2LD,YAAM;AAAA,UACfC,kBADe,GACO,MAAKL,KADZ,CACfK,kBADe;;AAEtB,UAAI,CAACA,kBAAD,IACFA,kBAAkB,OAAO,KAD3B,EACkC;AAChC,cAAKC,IAAL;AACD;AACF,KAjMkB;;AAAA,UAmMnBC,aAnMmB,GAmMH,YAAM;AAAA,UACbF,kBADa,GACS,MAAKL,KADd,CACbK,kBADa;;AAEpB,UAAI,CAACA,kBAAD,IACFA,kBAAkB,OAAO,KAD3B,EACkC;AAChC,cAAKC,IAAL;AACD;AACF,KAzMkB;;AAAA,UAwOnBE,UAxOmB,GAwON,UAACC,OAAD,EAAUC,SAAV,EAAqBC,KAArB,EAA4BC,YAA5B,EAA6C;AAAA,wBACuB,MAAKZ,KAD5B;AAAA,UACjDa,SADiD,eACjDA,SADiD;AAAA,UACtCC,iBADsC,eACtCA,iBADsC;AAAA,UACnBC,0BADmB,eACnBA,0BADmB;AAAA,UACSC,UADT,eACSA,UADT;AAAA,UAEjDC,aAFiD,GAEhC,MAAKC,KAF2B,CAEjDD,aAFiD;AAGxD,UAAME,GAAG,YAAUR,KAAnB;AACA,UAAMS,WAAW,GAAGT,KAAK,IAAIM,aAA7B;AACA,UAAMI,GAAG,GAAG,CAACR,SAAD,GACT,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CACZS,MAAM,CAACC,OADK,EAEZT,iBAFY,EAGZM,WAAW,IAAIE,MAAM,CAACE,kBAHV,EAIZJ,WAAW,IAAIL,0BAJH,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOEN,OAPF,CADS,GAUVI,SAAS,CAACJ,OAAD,EAAUE,KAAV,EAAiBS,WAAjB,CAVX;AAWA,UAAMK,cAAc,GAAG;AACrBN,QAAAA,GAAG,EAAHA,GADqB;AAErBH,QAAAA,UAAU,EAAVA,UAFqB;AAGrBU,QAAAA,OAAO,EAAE;AAAA,iBAAM,MAAKC,WAAL,CAAiBlB,OAAjB,EAA0BC,SAA1B,EAAqCC,KAArC,EAA4CC,YAA5C,CAAN;AAAA;AAHY,OAAvB;;AAKA,UAAId,kBAAkB,CAAC8B,IAAnB,CAAwB,UAAAC,IAAI;AAAA,eAAIA,IAAI,IAAIR,GAAG,CAACS,IAAJ,CAASC,WAArB;AAAA,OAA5B,CAAJ,EAAmE;AACjE,YAAM/B,KAAK,qBAAOqB,GAAG,CAACrB,KAAX,CAAX;;AACAA,QAAAA,KAAK,CAACmB,GAAN,GAAYM,cAAc,CAACN,GAA3B;AACAnB,QAAAA,KAAK,CAAC0B,OAAN,GAAgBD,cAAc,CAACC,OAA/B;AAHiE,YAI1DM,QAJ0D,GAI9CX,GAAG,CAACrB,KAJ0C,CAI1DgC,QAJ0D;;AAKjE,gBAAQX,GAAG,CAACS,IAAJ,CAASC,WAAjB;AACE,eAAK,oBAAL;AAA2B;AACzB,qBACE,oBAAC,kBAAD,eAAwB/B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACGgC,QADH,CADF;AAKD;;AACD,eAAK,kBAAL;AAAyB;AACvB,qBACE,oBAAC,gBAAD,eAAsBhC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACGgC,QADH,CADF;AAKD;;AACD,eAAK,0BAAL;AAAiC;AAC/B,qBACE,oBAAC,wBAAD,eAA8BhC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACGgC,QADH,CADF;AAKD;;AACD,eAAK,yBAAL;AAAgC;AAC9B,qBACE,oBAAC,uBAAD,eAA6BhC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACGgC,QADH,CADF;AAKD;;AACD;AACE;AA9BJ;AAgCD;;AACD,aACE,oBAAC,kBAAD,eAAwBP,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACGJ,GADH,CADF;AAKD,KAxSkB;;AAAA,UA6TnBY,gBA7TmB,GA6TA,UAACvB,SAAD,EAAYC,KAAZ,EAAmBuB,sBAAnB,EAA8C;AAC/D,UAAMf,GAAG,YAAUR,KAAnB;AACA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEW,MAAM,CAACa,SAApB;AACM,QAAA,GAAG,EAAEhB,GADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAKD,KApUkB;;AAGjB,UAAKiB,OAAL,GAAe,IAAf;AACA,UAAKC,YAAL,GAAoB,IAApB;AACA,UAAKC,UAAL,GAAkB,IAAlB;AACA,UAAKC,UAAL,GAAkB,IAAlB;AAEA,UAAKrB,KAAL,GAAa;AACXF,MAAAA,UAAU,EAAE,CAAC,CAAChB,MAAK,CAACgB,UADT;AAEXwB,MAAAA,OAAO,EAAE,CAACxC,MAAK,CAACyC,OAFL;AAGXC,MAAAA,YAAY,EAAE,KAHH;AAIXC,MAAAA,UAAU,EAAE3C,MAAK,CAAC4C,YAJP;AAKX3B,MAAAA,aAAa,EAAEjB,MAAK,CAAC6C;AALV,KAAb;AARiB;AAelB;;;;8CAEyBC,S,EAAW;AAAA,wBACD,KAAK5B,KADJ;AAAA,UAC9ByB,UAD8B,eAC9BA,UAD8B;AAAA,UAClB1B,aADkB,eAClBA,aADkB;AAAA,UAE5B4B,YAF4B,GAEWC,SAFX,CAE5BD,YAF4B;AAAA,UAEdD,YAFc,GAEWE,SAFX,CAEdF,YAFc;AAAA,UAEAH,OAFA,GAEWK,SAFX,CAEAL,OAFA;AAGnCE,MAAAA,UAAU,GAAG,KAAKL,UAAL,IAAmB,IAAnB,GAA0BK,UAA1B,GAAuC,KAAKL,UAAzD;AACArB,MAAAA,aAAa,GAAG,KAAKsB,UAAL,IAAmB,IAAnB,GAA0BtB,aAA1B,GAA0C,KAAKsB,UAA/D;;AACA,UAAItB,aAAa,GAAG,CAApB,EAAuB;AACrBA,QAAAA,aAAa,GAAG4B,YAAhB;;AACA,YAAI5B,aAAa,GAAG,CAApB,EAAuB;AACrB0B,UAAAA,UAAU,GAAGC,YAAb;AACD;AACF;;AACD,WAAKN,UAAL,GAAkB,IAAlB;AACA,WAAKC,UAAL,GAAkB,IAAlB;AAEA,WAAKQ,QAAL,CAAc;AACZP,QAAAA,OAAO,EAAE,CAACC,OADE;AAEZE,QAAAA,UAAU,EAAVA,UAFY;AAGZ1B,QAAAA,aAAa,EAAbA;AAHY,OAAd;AAKD;;;6BAEQ;AACP,aACE,oBAAC,IAAD,eAAU,KAAKjB,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACG,KAAKgD,aAAL,EADH,EAEG,KAAKC,YAAL,EAFH,CADF;AAMD;;;oCAEeC,Q,EAAU;AAAA;;AACxB,UAAI,KAAKd,OAAL,IAAgB,KAAKA,OAAL,CAAae,OAAjC,EAA0C;AACxC,aAAKf,OAAL,CAAae,OAAb,CAAqB,UAACC,EAAD,EAAKC,EAAL,EAASC,KAAT,EAAgBC,MAAhB,EAAwBC,EAAxB,EAA4BC,EAA5B,EAAmC;AACtD,UAAA,MAAI,CAACpB,YAAL,GAAoB;AAACqB,YAAAA,CAAC,EAAEF,EAAJ;AAAQG,YAAAA,CAAC,EAAEF,EAAX;AAAeG,YAAAA,CAAC,EAAEN,KAAlB;AAAyBO,YAAAA,CAAC,EAAEN;AAA5B,WAApB;AACAL,UAAAA,QAAQ,IAAIA,QAAQ,EAApB;AACD,SAHD;AAID;AACF;;;2BAEM;AAAA;;AACL,WAAKY,eAAL,CAAqB,YAAM;AACzB,QAAA,MAAI,CAACf,QAAL,CAAc;AACZL,UAAAA,YAAY,EAAE;AADF,SAAd;AAGD,OAJD;AAKD;;;2BAEM;AACL,WAAKK,QAAL,CAAc;AACZL,QAAAA,YAAY,EAAE;AADF,OAAd;AAGD;;;2BAEMqB,G,EAAK;AAAA,yBACsD,KAAK/D,KAD3D;AAAA,UACH4C,YADG,gBACHA,YADG;AAAA,UACWH,OADX,gBACWA,OADX;AAAA,UACoBI,YADpB,gBACoBA,YADpB;AAAA,UACkCmB,gBADlC,gBACkCA,gBADlC;AAGV,UAAIC,KAAK,GAAGrB,YAAZ;;AACA,UAAImB,GAAG,IAAI,IAAP,IAAe,CAACtB,OAAhB,IAA2BsB,GAAG,IAAItB,OAAO,CAACyB,MAA9C,EAAsD;AACpDH,QAAAA,GAAG,GAAGlB,YAAN;AACD;;AAED,UAAIkB,GAAG,IAAI,CAAX,EAAc;AACZE,QAAAA,KAAK,GAAGD,gBAAgB,GAAGA,gBAAgB,CAACvB,OAAO,CAACsB,GAAD,CAAR,CAAnB,GAAoCtB,OAAO,CAACsB,GAAD,CAAP,CAAaI,QAAb,EAA5D;AACD;;AAED,WAAK7B,UAAL,GAAkB2B,KAAlB;AACA,WAAK1B,UAAL,GAAkBwB,GAAlB;AAEA,WAAKhB,QAAL,CAAc;AACZJ,QAAAA,UAAU,EAAEsB,KADA;AAEZhD,QAAAA,aAAa,EAAE8C;AAFH,OAAd;AAID;;;oCAEe;AAAA;;AAAA,yBACsC,KAAK/D,KAD3C;AAAA,UACPoE,QADO,gBACPA,QADO;AAAA,UACGpD,UADH,gBACGA,UADH;AAAA,UACegB,QADf,gBACeA,QADf;AAAA,UACyBqC,SADzB,gBACyBA,SADzB;AAAA,UAEP1B,UAFO,GAEO,KAAKzB,KAFZ,CAEPyB,UAFO;AAId,aACE,oBAAC,gBAAD;AAAkB,QAAA,GAAG,EAAE,aAAA2B,MAAM;AAAA,iBAAI,MAAI,CAAClC,OAAL,GAAekC,MAAnB;AAAA,SAA7B;AACkB,QAAA,QAAQ,EAAEF,QAD5B;AAEkB,QAAA,UAAU,EAAEpD,UAF9B;AAGkB,QAAA,OAAO,EAAE,KAAKf,cAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI+B,QAAQ,IAEN,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEV,MAAM,CAACgD,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAAChD,MAAM,CAACqB,UAAR,EAAoB0B,SAApB,CAAb;AACM,QAAA,aAAa,EAAE,CADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGG1B,UAHH,CADF,CARN,CADF;AAoBD;;;mCAUc;AAAA,yBACiC,KAAK3C,KADtC;AAAA,UACNuE,QADM,gBACNA,QADM;AAAA,UACIvD,UADJ,gBACIA,UADJ;AAAA,UACgBwD,aADhB,gBACgBA,aADhB;AAAA,yBAEmB,KAAKtD,KAFxB;AAAA,UAENwB,YAFM,gBAENA,YAFM;AAAA,UAEQF,OAFR,gBAEQA,OAFR;;AAGb,UAAIE,YAAY,IAAI,KAAKL,YAAzB,EAAuC;AACrC,YAAMoC,UAAU,GAAG,KAAKC,aAAL,EAAnB;;AACA,YAAMC,aAAa,GAAGJ,QAAQ,GAAG,MAAH,GAAY,MAA1C;AACA,eACE,oBAAC,KAAD;AAAO,UAAA,aAAa,EAAEI,aAAtB;AACO,UAAA,OAAO,EAAE,IADhB;AAEO,UAAA,WAAW,EAAE,IAFpB;AAGO,UAAA,cAAc,EAAE,KAAKvE,eAH5B;AAIO,UAAA,qBAAqB,EAAE,CAAC,UAAD,EAAa,sBAAb,EAAqC,WAArC,EAAkD,gBAAlD,EAAoE,iBAApE,CAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAME,oBAAC,wBAAD;AAA0B,UAAA,UAAU,EAAEY,UAAtC;AAC0B,UAAA,QAAQ,EAAE,CAAC0B,YADrC;AAE0B,UAAA,OAAO,EAAE,KAAKnC,aAFxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEe,MAAM,CAACsD,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE,CAACtD,MAAM,CAACuD,QAAR,EAAkBL,aAAlB,EAAiCC,UAAjC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGjC,OAAO,GAAG,KAAKsC,cAAL,EAAH,GAA2B,KAAKC,eAAL,EADrC,CADF,CAJF,CANF,CADF;AAmBD;AACF;;;oCAEe;AAAA,yBAC8B,KAAK/E,KADnC;AAAA,UACPwE,aADO,gBACPA,aADO;AAAA,UACQQ,KADR,gBACQA,KADR;AAAA,UACeC,WADf,gBACeA,WADf;AAGd,UAAMC,UAAU,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAnB;AACA,UAAMC,WAAW,GAAGH,UAAU,CAAC5B,KAA/B;AACA,UAAMgC,YAAY,GAAGJ,UAAU,CAAC3B,MAAhC;AAEA,UAAMgC,cAAc,GAAIf,aAAa,IAAIgB,UAAU,CAACC,OAAX,CAAmBjB,aAAnB,EAAkCjB,MAApD,IACrBiC,UAAU,CAACC,OAAX,CAAmBnE,MAAM,CAACuD,QAA1B,EAAoCtB,MADtC;AAGA,UAAMmC,WAAW,GAAGJ,YAAY,GAAG,KAAKjD,YAAL,CAAkBsB,CAAjC,GAAqC,KAAKtB,YAAL,CAAkBwB,CAA3E;AACA,UAAM8B,UAAU,GAAGN,WAAW,GAAG,KAAKhD,YAAL,CAAkBqB,CAAnD;AACA,UAAMkC,YAAY,GAAGF,WAAW,IAAIH,cAAf,IAAiCG,WAAW,IAAI,KAAKrD,YAAL,CAAkBsB,CAAvF;AACA,UAAMkC,UAAU,GAAGF,UAAU,IAAI,KAAKtD,YAAL,CAAkBqB,CAAnD;AAEA,UAAMoC,aAAa,GAAG;AACpBvC,QAAAA,MAAM,EAAEgC,cADY;AAEpBQ,QAAAA,GAAG,EAAEH,YAAY,GAAG,KAAKvD,YAAL,CAAkBsB,CAAlB,GAAsB,KAAKtB,YAAL,CAAkBwB,CAA3C,GAA+CmC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,KAAK5D,YAAL,CAAkBsB,CAAlB,GAAsB4B,cAAlC;AAF5C,OAAtB;;AAKA,UAAIM,UAAJ,EAAgB;AACdC,QAAAA,aAAa,CAACI,IAAd,GAAqB,KAAK7D,YAAL,CAAkBqB,CAAvC;AACD,OAFD,MAEO;AACL,YAAMyC,aAAa,GAAI3B,aAAa,IAAIgB,UAAU,CAACC,OAAX,CAAmBjB,aAAnB,EAAkClB,KAApD,IACnB0B,KAAK,IAAIQ,UAAU,CAACC,OAAX,CAAmBT,KAAnB,EAA0B1B,KADhB,IAC0B,CAAC,CADjD;;AAEA,YAAI6C,aAAa,KAAK,CAAC,CAAvB,EAA0B;AACxBL,UAAAA,aAAa,CAACxC,KAAd,GAAsB6C,aAAtB;AACD;;AACDL,QAAAA,aAAa,CAACM,KAAd,GAAsBT,UAAU,GAAG,KAAKtD,YAAL,CAAkBuB,CAArD;AACD;;AAED,aAAOqB,WAAW,GAAGA,WAAW,CAACa,aAAD,CAAd,GAAgCA,aAAlD;AACD;;;qCAkBgB;AACf,aACE,oBAAC,iBAAD;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;sCAEiB;AAAA,yBACkF,KAAK9F,KADvF;AAAA,UACTqG,aADS,gBACTA,aADS;AAAA,UACMC,eADN,gBACMA,eADN;AAAA,UACuBC,4BADvB,gBACuBA,4BADvB;AAAA,UACqDC,yBADrD,gBACqDA,yBADrD;AAEhB,aACE,oBAAC,QAAD;AAAU,QAAA,aAAa,EAAEH,aAAzB;AACU,QAAA,KAAK,EAAE/E,MAAM,CAACmF,IADxB;AAEU,QAAA,UAAU,EAAE,KAAKC,WAF3B;AAGU,QAAA,SAAS,EAAE,KAAKlG,UAH1B;AAIU,QAAA,eAAe,EAAE8F,eAAe,IAAI,KAAKrE,gBAJnD;AAKU,QAAA,gCAAgC,EAAE,KAL5C;AAMU,QAAA,4BAA4B,EAAEsE,4BANxC;AAOU,QAAA,yBAAyB,EAAEC,yBAPrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAWD;;;gCA4EW/F,O,EAASC,S,EAAWC,K,EAAOC,Y,EAAc;AAAA,yBACM,KAAKZ,KADX;AAAA,UAC5C2G,QAD4C,gBAC5CA,QAD4C;AAAA,UAClC3C,gBADkC,gBAClCA,gBADkC;AAAA,UAChB3D,kBADgB,gBAChBA,kBADgB;;AAEnD,UAAI,CAACsG,QAAD,IAAaA,QAAQ,CAAChG,KAAD,EAAQF,OAAR,CAAR,KAA6B,KAA9C,EAAqD;AACnDG,QAAAA,YAAY,CAACF,SAAD,EAAYC,KAAZ,CAAZ;AACA,YAAMsD,KAAK,GAAGD,gBAAgB,IAAIA,gBAAgB,CAACvD,OAAD,CAApC,IAAiDA,OAAO,CAAC0D,QAAR,EAA/D;AACA,aAAK7B,UAAL,GAAkB2B,KAAlB;AACA,aAAK1B,UAAL,GAAkB5B,KAAlB;AACA,aAAKoC,QAAL,CAAc;AACZJ,UAAAA,UAAU,EAAEsB,KADA;AAEZhD,UAAAA,aAAa,EAAEN;AAFH,SAAd;AAID;;AACD,UAAI,CAACN,kBAAD,IAAuBA,kBAAkB,OAAO,KAApD,EAA2D;AACzD,aAAK0C,QAAL,CAAc;AACZL,UAAAA,YAAY,EAAE;AADF,SAAd;AAGD;AACF;;;wBA3FiB;AAAA,UACTD,OADS,GACE,KAAKzC,KADP,CACTyC,OADS;AAEhB,UAAMmE,EAAE,GAAG,IAAIhH,QAAQ,CAACiH,UAAb,CAAwB;AACjCC,QAAAA,aAAa,EAAE,uBAACC,EAAD,EAAKC,EAAL;AAAA,iBAAYD,EAAE,KAAKC,EAAnB;AAAA;AADkB,OAAxB,CAAX;AAGA,aAAOJ,EAAE,CAACK,aAAH,CAAiBxE,OAAjB,CAAP;AACD;;;;EA9QwC9C,S;;AAAtBI,a,CACZmH,S,GAAY;AACjB9C,EAAAA,QAAQ,EAAEvE,SAAS,CAACsH,IADH;AAEjBd,EAAAA,aAAa,EAAExG,SAAS,CAACsH,IAFR;AAGjBtE,EAAAA,YAAY,EAAEhD,SAAS,CAACuH,MAHP;AAIjBxE,EAAAA,YAAY,EAAE/C,SAAS,CAACwH,MAJP;AAKjB5E,EAAAA,OAAO,EAAE5C,SAAS,CAACyH,KALF;AAOjBtG,EAAAA,UAAU,EAAEnB,SAAS,CAACsH,IAPL;AAQjB5C,EAAAA,QAAQ,EAAE1E,SAAS,CAACsH,IARH;AASjBZ,EAAAA,4BAA4B,EAAE1G,SAAS,CAACsH,IATvB;AAUjBX,EAAAA,yBAAyB,EAAE3G,SAAS,CAACwH,MAVpB;AAYjBrC,EAAAA,KAAK,EAAEnF,SAAS,CAAC0H,SAAV,CAAoB,CAAC1H,SAAS,CAACuH,MAAX,EAAmBvH,SAAS,CAAC2H,MAA7B,EAAqC3H,SAAS,CAACyH,KAA/C,CAApB,CAZU;AAajBjD,EAAAA,SAAS,EAAExE,SAAS,CAAC0H,SAAV,CAAoB,CAAC1H,SAAS,CAACuH,MAAX,EAAmBvH,SAAS,CAAC2H,MAA7B,EAAqC3H,SAAS,CAACyH,KAA/C,CAApB,CAbM;AAcjB9C,EAAAA,aAAa,EAAE3E,SAAS,CAAC0H,SAAV,CAAoB,CAAC1H,SAAS,CAACuH,MAAX,EAAmBvH,SAAS,CAAC2H,MAA7B,EAAqC3H,SAAS,CAACyH,KAA/C,CAApB,CAdE;AAejBxG,EAAAA,iBAAiB,EAAEjB,SAAS,CAAC0H,SAAV,CAAoB,CAAC1H,SAAS,CAACuH,MAAX,EAAmBvH,SAAS,CAAC2H,MAA7B,EAAqC3H,SAAS,CAACyH,KAA/C,CAApB,CAfF;AAgBjBvG,EAAAA,0BAA0B,EAAElB,SAAS,CAAC0H,SAAV,CAAoB,CAAC1H,SAAS,CAACuH,MAAX,EAAmBvH,SAAS,CAAC2H,MAA7B,EAAqC3H,SAAS,CAACyH,KAA/C,CAApB,CAhBX;AAkBjBrC,EAAAA,WAAW,EAAEpF,SAAS,CAAC4H,IAlBN;AAmBjB5G,EAAAA,SAAS,EAAEhB,SAAS,CAAC4H,IAnBJ;AAoBjBnB,EAAAA,eAAe,EAAEzG,SAAS,CAAC4H,IApBV;AAqBjBzD,EAAAA,gBAAgB,EAAEnE,SAAS,CAAC4H,IArBX;AAuBjBvH,EAAAA,kBAAkB,EAAEL,SAAS,CAAC4H,IAvBb;AAwBjBpH,EAAAA,kBAAkB,EAAER,SAAS,CAAC4H,IAxBb;AAyBjBd,EAAAA,QAAQ,EAAE9G,SAAS,CAAC4H;AAzBH,C;AADA1H,a,CA6BZ2H,Y,GAAe;AACpBtD,EAAAA,QAAQ,EAAE,KADU;AAEpBiC,EAAAA,aAAa,EAAE,IAFK;AAGpBxD,EAAAA,YAAY,EAAE,CAAC,CAHK;AAIpBD,EAAAA,YAAY,EAAE,kBAJM;AAKpBH,EAAAA,OAAO,EAAE,IALW;AAMpB8B,EAAAA,QAAQ,EAAE,IANU;AAOpBgC,EAAAA,4BAA4B,EAAE,IAPV;AAQpBC,EAAAA,yBAAyB,EAAE;AARP,C;SA7BHzG,a;AA+WrB,IAAMuB,MAAM,GAAGkE,UAAU,CAACmC,MAAX,CAAkB;AAC/BrD,EAAAA,MAAM,EAAE;AACNsD,IAAAA,cAAc,EAAE;AADV,GADuB;AAI/BjF,EAAAA,UAAU,EAAE;AACVkF,IAAAA,QAAQ,EAAE;AADA,GAJmB;AAO/BjD,EAAAA,KAAK,EAAE;AACLkD,IAAAA,QAAQ,EAAE;AADL,GAPwB;AAU/BjD,EAAAA,QAAQ,EAAE;AACRkD,IAAAA,QAAQ,EAAE,UADF;AAERxE,IAAAA,MAAM,EAAE,CAAC,KAAKiC,UAAU,CAACwC,aAAjB,IAAkC,CAFlC;AAGRC,IAAAA,WAAW,EAAEzC,UAAU,CAACwC,aAHhB;AAIRE,IAAAA,WAAW,EAAE,WAJL;AAKRC,IAAAA,YAAY,EAAE,CALN;AAMRC,IAAAA,eAAe,EAAE,OANT;AAORR,IAAAA,cAAc,EAAE;AAPR,GAVqB;AAmB/BpF,EAAAA,OAAO,EAAE;AACP6F,IAAAA,SAAS,EAAE;AADJ,GAnBsB;AAsB/B5B,EAAAA,IAAI,EAAE,EAtByB;AAyB/BlF,EAAAA,OAAO,EAAE;AACP+G,IAAAA,iBAAiB,EAAE,CADZ;AAEPC,IAAAA,eAAe,EAAE,EAFV;AAGPV,IAAAA,QAAQ,EAAE,EAHH;AAIPW,IAAAA,KAAK,EAAE,MAJA;AAKPJ,IAAAA,eAAe,EAAE,OALV;AAMPK,IAAAA,iBAAiB,EAAE;AANZ,GAzBsB;AAiC/BjH,EAAAA,kBAAkB,EAAE;AAClBgH,IAAAA,KAAK,EAAE;AADW,GAjCW;AAoC/BrG,EAAAA,SAAS,EAAE;AACToB,IAAAA,MAAM,EAAEiC,UAAU,CAACwC,aADV;AAETI,IAAAA,eAAe,EAAE;AAFR;AApCoB,CAAlB,CAAf","sourcesContent":["/**\n * Created by sohobloo on 16/9/13.\n */\n\n'use strict';\n\nimport React, {\n  Component,\n} from 'react';\n\nimport {\n  StyleSheet,\n  Dimensions,\n  View,\n  Text,\n  TouchableWithoutFeedback,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  TouchableHighlight,\n  Modal,\n  ActivityIndicator,\n} from 'react-native';\n\nimport ListView from \"deprecated-react-native-listview\";\nimport PropTypes from 'prop-types';\n\nconst TOUCHABLE_ELEMENTS = [\n  'TouchableHighlight',\n  'TouchableOpacity',\n  'TouchableWithoutFeedback',\n  'TouchableNativeFeedback'\n];\n\nexport default class ModalDropdown extends Component {\n  static propTypes = {\n    disabled: PropTypes.bool,\n    scrollEnabled: PropTypes.bool,\n    defaultIndex: PropTypes.number,\n    defaultValue: PropTypes.string,\n    options: PropTypes.array,\n\n    accessible: PropTypes.bool,\n    animated: PropTypes.bool,\n    showsVerticalScrollIndicator: PropTypes.bool,\n    keyboardShouldPersistTaps: PropTypes.string,\n\n    style: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n    textStyle: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n    dropdownStyle: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n    dropdownTextStyle: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n    dropdownTextHighlightStyle: PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]),\n\n    adjustFrame: PropTypes.func,\n    renderRow: PropTypes.func,\n    renderSeparator: PropTypes.func,\n    renderButtonText: PropTypes.func,\n\n    onDropdownWillShow: PropTypes.func,\n    onDropdownWillHide: PropTypes.func,\n    onSelect: PropTypes.func\n  };\n\n  static defaultProps = {\n    disabled: false,\n    scrollEnabled: true,\n    defaultIndex: -1,\n    defaultValue: 'Please select...',\n    options: null,\n    animated: true,\n    showsVerticalScrollIndicator: true,\n    keyboardShouldPersistTaps: 'never'\n  };\n\n  constructor(props) {\n    super(props);\n\n    this._button = null;\n    this._buttonFrame = null;\n    this._nextValue = null;\n    this._nextIndex = null;\n\n    this.state = {\n      accessible: !!props.accessible,\n      loading: !props.options,\n      showDropdown: false,\n      buttonText: props.defaultValue,\n      selectedIndex: props.defaultIndex\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let {buttonText, selectedIndex} = this.state;\n    const {defaultIndex, defaultValue, options} = nextProps;\n    buttonText = this._nextValue == null ? buttonText : this._nextValue;\n    selectedIndex = this._nextIndex == null ? selectedIndex : this._nextIndex;\n    if (selectedIndex < 0) {\n      selectedIndex = defaultIndex;\n      if (selectedIndex < 0) {\n        buttonText = defaultValue;\n      }\n    }\n    this._nextValue = null;\n    this._nextIndex = null;\n\n    this.setState({\n      loading: !options,\n      buttonText,\n      selectedIndex\n    });\n  }\n\n  render() {\n    return (\n      <View {...this.props}>\n        {this._renderButton()}\n        {this._renderModal()}\n      </View>\n    );\n  }\n\n  _updatePosition(callback) {\n    if (this._button && this._button.measure) {\n      this._button.measure((fx, fy, width, height, px, py) => {\n        this._buttonFrame = {x: px, y: py, w: width, h: height};\n        callback && callback();\n      });\n    }\n  }\n\n  show() {\n    this._updatePosition(() => {\n      this.setState({\n        showDropdown: true\n      });\n    });\n  }\n\n  hide() {\n    this.setState({\n      showDropdown: false\n    });\n  }\n\n  select(idx) {\n    const {defaultValue, options, defaultIndex, renderButtonText} = this.props;\n\n    let value = defaultValue;\n    if (idx == null || !options || idx >= options.length) {\n      idx = defaultIndex;\n    }\n\n    if (idx >= 0) {\n      value = renderButtonText ? renderButtonText(options[idx]) : options[idx].toString();\n    }\n\n    this._nextValue = value;\n    this._nextIndex = idx;\n\n    this.setState({\n      buttonText: value,\n      selectedIndex: idx\n    });\n  }\n\n  _renderButton() {\n    const {disabled, accessible, children, textStyle} = this.props;\n    const {buttonText} = this.state;\n\n    return (\n      <TouchableOpacity ref={button => this._button = button}\n                        disabled={disabled}\n                        accessible={accessible}\n                        onPress={this._onButtonPress}\n      >\n        {\n          children ||\n          (\n            <View style={styles.button}>\n              <Text style={[styles.buttonText, textStyle]}\n                    numberOfLines={1}\n              >\n                {buttonText}\n              </Text>\n            </View>\n          )\n        }\n      </TouchableOpacity>\n    );\n  }\n\n  _onButtonPress = () => {\n    const {onDropdownWillShow} = this.props;\n    if (!onDropdownWillShow ||\n      onDropdownWillShow() !== false) {\n      this.show();\n    }\n  };\n\n  _renderModal() {\n    const {animated, accessible, dropdownStyle} = this.props;\n    const {showDropdown, loading} = this.state;\n    if (showDropdown && this._buttonFrame) {\n      const frameStyle = this._calcPosition();\n      const animationType = animated ? 'fade' : 'none';\n      return (\n        <Modal animationType={animationType}\n               visible={true}\n               transparent={true}\n               onRequestClose={this._onRequestClose}\n               supportedOrientations={['portrait', 'portrait-upside-down', 'landscape', 'landscape-left', 'landscape-right']}\n        >\n          <TouchableWithoutFeedback accessible={accessible}\n                                    disabled={!showDropdown}\n                                    onPress={this._onModalPress}\n          >\n            <View style={styles.modal}>\n              <View style={[styles.dropdown, dropdownStyle, frameStyle]}>\n                {loading ? this._renderLoading() : this._renderDropdown()}\n              </View>\n            </View>\n          </TouchableWithoutFeedback>\n        </Modal>\n      );\n    }\n  }\n\n  _calcPosition() {\n    const {dropdownStyle, style, adjustFrame} = this.props;\n\n    const dimensions = Dimensions.get('window');\n    const windowWidth = dimensions.width;\n    const windowHeight = dimensions.height;\n\n    const dropdownHeight = (dropdownStyle && StyleSheet.flatten(dropdownStyle).height) ||\n      StyleSheet.flatten(styles.dropdown).height;\n\n    const bottomSpace = windowHeight - this._buttonFrame.y - this._buttonFrame.h;\n    const rightSpace = windowWidth - this._buttonFrame.x;\n    const showInBottom = bottomSpace >= dropdownHeight || bottomSpace >= this._buttonFrame.y;\n    const showInLeft = rightSpace >= this._buttonFrame.x;\n\n    const positionStyle = {\n      height: dropdownHeight,\n      top: showInBottom ? this._buttonFrame.y + this._buttonFrame.h : Math.max(0, this._buttonFrame.y - dropdownHeight),\n    };\n\n    if (showInLeft) {\n      positionStyle.left = this._buttonFrame.x;\n    } else {\n      const dropdownWidth = (dropdownStyle && StyleSheet.flatten(dropdownStyle).width) ||\n        (style && StyleSheet.flatten(style).width) || -1;\n      if (dropdownWidth !== -1) {\n        positionStyle.width = dropdownWidth;\n      }\n      positionStyle.right = rightSpace - this._buttonFrame.w;\n    }\n\n    return adjustFrame ? adjustFrame(positionStyle) : positionStyle;\n  }\n\n  _onRequestClose = () => {\n    const {onDropdownWillHide} = this.props;\n    if (!onDropdownWillHide ||\n      onDropdownWillHide() !== false) {\n      this.hide();\n    }\n  };\n\n  _onModalPress = () => {\n    const {onDropdownWillHide} = this.props;\n    if (!onDropdownWillHide ||\n      onDropdownWillHide() !== false) {\n      this.hide();\n    }\n  };\n\n  _renderLoading() {\n    return (\n      <ActivityIndicator size='small'/>\n    );\n  }\n\n  _renderDropdown() {\n    const {scrollEnabled, renderSeparator, showsVerticalScrollIndicator, keyboardShouldPersistTaps} = this.props;\n    return (\n      <ListView scrollEnabled={scrollEnabled}\n                style={styles.list}\n                dataSource={this._dataSource}\n                renderRow={this._renderRow}\n                renderSeparator={renderSeparator || this._renderSeparator}\n                automaticallyAdjustContentInsets={false}\n                showsVerticalScrollIndicator={showsVerticalScrollIndicator}\n                keyboardShouldPersistTaps={keyboardShouldPersistTaps}\n      />\n    );\n  }\n\n  get _dataSource() {\n    const {options} = this.props;\n    const ds = new ListView.DataSource({\n      rowHasChanged: (r1, r2) => r1 !== r2\n    });\n    return ds.cloneWithRows(options);\n  }\n\n  _renderRow = (rowData, sectionID, rowID, highlightRow) => {\n    const {renderRow, dropdownTextStyle, dropdownTextHighlightStyle, accessible} = this.props;\n    const {selectedIndex} = this.state;\n    const key = `row_${rowID}`;\n    const highlighted = rowID == selectedIndex;\n    const row = !renderRow ?\n      (<Text style={[\n        styles.rowText,\n        dropdownTextStyle,\n        highlighted && styles.highlightedRowText,\n        highlighted && dropdownTextHighlightStyle\n      ]}\n      >\n        {rowData}\n      </Text>) :\n      renderRow(rowData, rowID, highlighted);\n    const preservedProps = {\n      key,\n      accessible,\n      onPress: () => this._onRowPress(rowData, sectionID, rowID, highlightRow),\n    };\n    if (TOUCHABLE_ELEMENTS.find(name => name == row.type.displayName)) {\n      const props = {...row.props};\n      props.key = preservedProps.key;\n      props.onPress = preservedProps.onPress;\n      const {children} = row.props;\n      switch (row.type.displayName) {\n        case 'TouchableHighlight': {\n          return (\n            <TouchableHighlight {...props}>\n              {children}\n            </TouchableHighlight>\n          );\n        }\n        case 'TouchableOpacity': {\n          return (\n            <TouchableOpacity {...props}>\n              {children}\n            </TouchableOpacity>\n          );\n        }\n        case 'TouchableWithoutFeedback': {\n          return (\n            <TouchableWithoutFeedback {...props}>\n              {children}\n            </TouchableWithoutFeedback>\n          );\n        }\n        case 'TouchableNativeFeedback': {\n          return (\n            <TouchableNativeFeedback {...props}>\n              {children}\n            </TouchableNativeFeedback>\n          );\n        }\n        default:\n          break;\n      }\n    }\n    return (\n      <TouchableHighlight {...preservedProps}>\n        {row}\n      </TouchableHighlight>\n    );\n  };\n\n  _onRowPress(rowData, sectionID, rowID, highlightRow) {\n    const {onSelect, renderButtonText, onDropdownWillHide} = this.props;\n    if (!onSelect || onSelect(rowID, rowData) !== false) {\n      highlightRow(sectionID, rowID);\n      const value = renderButtonText && renderButtonText(rowData) || rowData.toString();\n      this._nextValue = value;\n      this._nextIndex = rowID;\n      this.setState({\n        buttonText: value,\n        selectedIndex: rowID\n      });\n    }\n    if (!onDropdownWillHide || onDropdownWillHide() !== false) {\n      this.setState({\n        showDropdown: false\n      });\n    }\n  }\n\n  _renderSeparator = (sectionID, rowID, adjacentRowHighlighted) => {\n    const key = `spr_${rowID}`;\n    return (\n      <View style={styles.separator}\n            key={key}\n      />\n    );\n  };\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    justifyContent: 'center'\n  },\n  buttonText: {\n    fontSize: 12\n  },\n  modal: {\n    flexGrow: 1\n  },\n  dropdown: {\n    position: 'absolute',\n    height: (33 + StyleSheet.hairlineWidth) * 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: 'lightgray',\n    borderRadius: 2,\n    backgroundColor: 'white',\n    justifyContent: 'center'\n  },\n  loading: {\n    alignSelf: 'center'\n  },\n  list: {\n    //flexGrow: 1,\n  },\n  rowText: {\n    paddingHorizontal: 6,\n    paddingVertical: 10,\n    fontSize: 11,\n    color: 'gray',\n    backgroundColor: 'white',\n    textAlignVertical: 'center'\n  },\n  highlightedRowText: {\n    color: 'black'\n  },\n  separator: {\n    height: StyleSheet.hairlineWidth,\n    backgroundColor: 'lightgray'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}