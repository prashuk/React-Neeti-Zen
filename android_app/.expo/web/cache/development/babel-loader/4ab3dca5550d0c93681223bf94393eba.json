{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/prashuk/Desktop/Github/Neeti-Zen/android_app/screens/Sidemenu/Profile.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Block, Button, Text, Input } from \"galio-framework\";\nimport * as firebase from \"firebase\";\nimport Spinner from \"react-native-loading-spinner-overlay\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar Profile = function (_React$Component) {\n  _inherits(Profile, _React$Component);\n\n  var _super = _createSuper(Profile);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      name: \"\",\n      email: \"\",\n      age: \"\",\n      place: \"\",\n      mobile: \"\",\n      spinner: false\n    };\n\n    _this.updateBtnPressed = function () {\n      _this.setState({\n        spinner: true\n      });\n\n      if (_this.state.name === \"\" || _this.state.age === \"\" || _this.state.place === \"\" || _this.state.mobile === \"\") {\n        _this.setState({\n          spinner: false\n        });\n\n        alert(\"Fill all fields\");\n        return;\n      }\n\n      firebase.database().ref(\"users/\" + global.User.user.uid + \"/profile/\").set({\n        name: _this.state.name,\n        email: _this.state.email,\n        age: _this.state.age,\n        place: _this.state.place,\n        mobile: _this.state.mobile\n      }).then(function () {\n        _this.setState({\n          spinner: false\n        });\n\n        Alert.alert(\"Profile Updated\", \"\", [{\n          text: \"OK\",\n          onPress: function onPress() {\n            return _this.props.navigation.goBack();\n          }\n        }], {\n          cancelable: true\n        });\n      }).catch(function (error) {\n        _this.setState({\n          spinner: false\n        });\n\n        alert(error.message);\n      });\n    };\n\n    firebase.database().ref(\"users/\" + global.User.user.uid + \"/profile/\").once(\"value\").then(function (snapshot) {\n      var name = snapshot.val()[\"name\"];\n      var email = snapshot.val()[\"email\"];\n      var age = snapshot.val()[\"age\"];\n      var place = snapshot.val()[\"place\"];\n      var mobile = snapshot.val()[\"mobile\"];\n\n      _this.setState({\n        name: name,\n        email: email,\n        age: age,\n        place: place,\n        mobile: mobile\n      });\n    });\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ScrollView, {\n        showsVerticalScrollIndicator: false,\n        contentContainerStyle: {\n          paddingBottom: 0\n        },\n        keyboardShouldPersistTaps: \"always\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }\n      }, React.createElement(Spinner, {\n        visible: this.state.spinner,\n        textStyle: styles.spinnerTextStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }), React.createElement(Block, {\n        flex: true,\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }\n      }, React.createElement(Block, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }, React.createElement(Block, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        color: \"#4f3961\",\n        size: 25,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }\n      }, \"Profile\")), React.createElement(Block, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      }, React.createElement(Input, {\n        placeholder: \"Name\",\n        value: this.state.name,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            name: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }\n      })), React.createElement(Block, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      }, React.createElement(Input, {\n        placeholder: \"Age & Sex\",\n        value: this.state.age,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            age: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }\n      })), React.createElement(Block, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      }, React.createElement(Input, {\n        placeholder: \"Address with Pin Code\",\n        value: this.state.place,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            place: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }\n      })), React.createElement(Block, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }\n      }, React.createElement(Input, {\n        placeholder: \"Mobile Number\",\n        value: this.state.mobile,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            mobile: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }\n      }))), React.createElement(Block, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }\n      }, React.createElement(Button, {\n        style: styles.button,\n        color: \"#4f3961\",\n        onPress: this.updateBtnPressed,\n        textStyle: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }\n      }, \"UPDATE\"))));\n    }\n  }]);\n\n  return Profile;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#fff2ff\",\n    height: height,\n    width: width\n  },\n  button: {\n    width: width - 40,\n    height: 50,\n    marginTop: 10\n  },\n  title: {\n    marginTop: 20,\n    marginRight: 30,\n    marginLeft: 30\n  }\n});\nexport default Profile;","map":{"version":3,"sources":["/Users/prashuk/Desktop/Github/Neeti-Zen/android_app/screens/Sidemenu/Profile.js"],"names":["React","Block","Button","Text","Input","firebase","Spinner","Dimensions","get","height","width","Profile","props","state","name","email","age","place","mobile","spinner","updateBtnPressed","setState","alert","database","ref","global","User","user","uid","set","then","Alert","text","onPress","navigation","goBack","cancelable","catch","error","message","once","snapshot","val","paddingBottom","styles","spinnerTextStyle","container","title","button","color","Component","StyleSheet","create","backgroundColor","marginTop","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { StyleSheet, Dimensions, ScrollView, Alert } from \"react-native\";\nimport { Block, Button, Text, Input } from \"galio-framework\";\nimport * as firebase from \"firebase\";\nimport Spinner from \"react-native-loading-spinner-overlay\";\n\nconst { height, width } = Dimensions.get(\"screen\");\n\nclass Profile extends React.Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    age: \"\",\n    place: \"\",\n    mobile: \"\",\n    spinner: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    firebase\n      .database()\n      .ref(\"users/\" + global.User.user.uid + \"/profile/\")\n      .once(\"value\")\n      .then((snapshot) => {\n        var name = snapshot.val()[\"name\"];\n        var email = snapshot.val()[\"email\"];\n        var age = snapshot.val()[\"age\"];\n        var place = snapshot.val()[\"place\"];\n        var mobile = snapshot.val()[\"mobile\"];\n\n        this.setState({\n          name: name,\n          email: email,\n          age: age,\n          place: place,\n          mobile: mobile,\n        });\n      });\n  }\n\n  updateBtnPressed = () => {\n    this.setState({ spinner: true });\n\n    if (\n      this.state.name === \"\" ||\n      this.state.age === \"\" ||\n      this.state.place === \"\" ||\n      this.state.mobile === \"\"\n    ) {\n      this.setState({ spinner: false });\n      alert(\"Fill all fields\");\n      return;\n    }\n\n    firebase\n      .database()\n      .ref(\"users/\" + global.User.user.uid + \"/profile/\")\n      .set({\n        name: this.state.name,\n        email: this.state.email,\n        age: this.state.age,\n        place: this.state.place,\n        mobile: this.state.mobile,\n      })\n      .then(() => {\n        this.setState({ spinner: false });\n        Alert.alert(\n          \"Profile Updated\",\n          \"\",\n          [\n            {\n              text: \"OK\",\n              onPress: () => this.props.navigation.goBack(),\n            },\n          ],\n          { cancelable: true }\n        );\n      })\n      .catch((error) => {\n        this.setState({ spinner: false });\n        alert(error.message);\n      });\n  };\n\n  render() {\n    return (\n      <ScrollView\n        showsVerticalScrollIndicator={false}\n        contentContainerStyle={{ paddingBottom: 0 }}\n        keyboardShouldPersistTaps=\"always\"\n      >\n        <Spinner\n          visible={this.state.spinner}\n          textStyle={styles.spinnerTextStyle}\n        />\n        <Block flex style={styles.container}>\n          <Block style={styles.title}>\n            <Block>\n              <Text color=\"#4f3961\" size={25}>\n                Profile\n              </Text>\n            </Block>\n            <Block>\n              <Input\n                placeholder=\"Name\"\n                value={this.state.name}\n                onChangeText={(text) => {\n                  this.setState({ name: text });\n                }}\n              ></Input>\n            </Block>\n            <Block>\n              <Input\n                placeholder=\"Age & Sex\"\n                value={this.state.age}\n                onChangeText={(text) => {\n                  this.setState({ age: text });\n                }}\n              ></Input>\n            </Block>\n            <Block>\n              <Input\n                placeholder=\"Address with Pin Code\"\n                value={this.state.place}\n                onChangeText={(text) => {\n                  this.setState({ place: text });\n                }}\n              ></Input>\n            </Block>\n            <Block>\n              <Input\n                placeholder=\"Mobile Number\"\n                value={this.state.mobile}\n                onChangeText={(text) => {\n                  this.setState({ mobile: text });\n                }}\n              ></Input>\n            </Block>\n          </Block>\n          <Block center>\n            <Button\n              style={styles.button}\n              color=\"#4f3961\"\n              onPress={this.updateBtnPressed}\n              textStyle={{ color: \"white\" }}\n            >\n              UPDATE\n            </Button>\n          </Block>\n        </Block>\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#fff2ff\",\n    height: height,\n    width: width,\n  },\n  button: {\n    width: width - 40,\n    height: 50,\n    marginTop: 10,\n  },\n  title: {\n    marginTop: 20,\n    marginRight: 30,\n    marginLeft: 30,\n  },\n});\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}