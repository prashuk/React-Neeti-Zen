{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/prashuk/Desktop/GitHub/React-Neeti-Zen/android_app/components/Switch.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport argonTheme from \"../constants/Theme\";\n\nvar MkSwitch = function (_React$Component) {\n  _inherits(MkSwitch, _React$Component);\n\n  var _super = _createSuper(MkSwitch);\n\n  function MkSwitch() {\n    _classCallCheck(this, MkSwitch);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MkSwitch, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          value = _this$props.value,\n          props = _objectWithoutProperties(_this$props, [\"value\"]);\n\n      var thumbColor = Platform.OS === \"ios\" ? null : Platform.OS === \"android\" && value ? argonTheme.COLORS.SWITCH_ON : argonTheme.COLORS.SWITCH_OFF;\n      return React.createElement(Switch, _extends({\n        value: value,\n        thumbColor: thumbColor,\n        ios_backgroundColor: argonTheme.COLORS.SWITCH_OFF,\n        trackColor: {\n          false: argonTheme.COLORS.SWITCH_ON,\n          true: argonTheme.COLORS.SWITCH_ON\n        }\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return MkSwitch;\n}(React.Component);\n\nexport default MkSwitch;","map":{"version":3,"sources":["/Users/prashuk/Desktop/GitHub/React-Neeti-Zen/android_app/components/Switch.js"],"names":["React","argonTheme","MkSwitch","props","value","thumbColor","Platform","OS","COLORS","SWITCH_ON","SWITCH_OFF","false","true","Component"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,OAAOC,UAAP;;IAEMC,Q;;;;;;;;;;;;;6BACK;AAAA,wBACqB,KAAKC,KAD1B;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACWD,KADX;;AAEP,UAAME,UAAU,GACdC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GACI,IADJ,GAEID,QAAQ,CAACC,EAAT,KAAgB,SAAhB,IAA6BH,KAA7B,GACAH,UAAU,CAACO,MAAX,CAAkBC,SADlB,GAEAR,UAAU,CAACO,MAAX,CAAkBE,UALxB;AAOA,aACE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAEN,KADT;AAEE,QAAA,UAAU,EAAEC,UAFd;AAGE,QAAA,mBAAmB,EAAEJ,UAAU,CAACO,MAAX,CAAkBE,UAHzC;AAIE,QAAA,UAAU,EAAE;AACVC,UAAAA,KAAK,EAAEV,UAAU,CAACO,MAAX,CAAkBC,SADf;AAEVG,UAAAA,IAAI,EAAEX,UAAU,CAACO,MAAX,CAAkBC;AAFd;AAJd,SAQMN,KARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAYD;;;;EAtBoBH,KAAK,CAACa,S;;AAyB7B,eAAeX,QAAf","sourcesContent":["import React from \"react\";\nimport { Switch, Platform } from \"react-native\";\n\nimport argonTheme from \"../constants/Theme\";\n\nclass MkSwitch extends React.Component {\n  render() {\n    const { value, ...props } = this.props;\n    const thumbColor =\n      Platform.OS === \"ios\"\n        ? null\n        : Platform.OS === \"android\" && value\n        ? argonTheme.COLORS.SWITCH_ON\n        : argonTheme.COLORS.SWITCH_OFF;\n\n    return (\n      <Switch\n        value={value}\n        thumbColor={thumbColor}\n        ios_backgroundColor={argonTheme.COLORS.SWITCH_OFF}\n        trackColor={{\n          false: argonTheme.COLORS.SWITCH_ON,\n          true: argonTheme.COLORS.SWITCH_ON,\n        }}\n        {...props}\n      />\n    );\n  }\n}\n\nexport default MkSwitch;\n"]},"metadata":{},"sourceType":"module"}