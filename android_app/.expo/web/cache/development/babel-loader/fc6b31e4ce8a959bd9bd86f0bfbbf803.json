{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/prashuk/Desktop/GitHub/React-Neeti-Zen/android_app/screens/Category/Parliament.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Block, Button, Text, Input } from \"galio-framework\";\nimport * as firebase from \"firebase\";\nimport \"firebase/storage\";\nimport Spinner from \"react-native-loading-spinner-overlay\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar Parliament = function (_React$Component) {\n  _inherits(Parliament, _React$Component);\n\n  var _super = _createSuper(Parliament);\n\n  function Parliament(props) {\n    var _this;\n\n    _classCallCheck(this, Parliament);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      complain: \"\",\n      ticketNumberDatabase: 0,\n      spinner: false\n    };\n\n    _this.submitBtnPressed = function () {\n      if (_this.state.complain === \"\") {\n        alert(\"Fill all fields\");\n        return;\n      }\n\n      _this.setState({\n        spinner: true\n      });\n\n      var ticketNumberDatabase = _this.state.ticketNumberDatabase;\n      var today = new Date();\n      var dd = String(today.getDate()).padStart(2, \"0\");\n      var mm = String(today.getMonth() + 1).padStart(2, \"0\");\n      var yyyy = today.getFullYear();\n      today = dd + \"/\" + mm + \"/\" + yyyy;\n      var postData = {\n        ticketNumber: ticketNumberDatabase,\n        description: {\n          name: global.currentUserName,\n          date: today,\n          type: \"parliament\",\n          status: \"open\",\n          assigned: \"admin\",\n          complain: _this.state.complain\n        }\n      };\n      firebase.database().ref(\"users/\" + global.User.user.uid + \"/complaints/parliament/\").push().set(postData).then(function () {\n        var updates = {};\n        updates[\"ticket/ticket/\"] = ticketNumberDatabase;\n        firebase.database().ref().update(updates).then(_this.setState({\n          spinner: false\n        }), Alert.alert(\"Complain Submitted: Ticket Number \" + ticketNumberDatabase.toString(), \"\", [{\n          text: \"OK\",\n          onPress: function onPress() {\n            _this.props.navigation.goBack();\n          }\n        }], {\n          cancelable: false\n        })).catch(function (error) {\n          console.log(error.message);\n        });\n      });\n    };\n\n    firebase.database().ref(\"ticket/ticket/\").on(\"value\", function (snapshot) {\n      var ticketNumberDatabase = parseInt(snapshot.val());\n      _this.state.ticketNumberDatabase = ticketNumberDatabase + 1;\n    });\n    return _this;\n  }\n\n  _createClass(Parliament, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ScrollView, {\n        showsVerticalScrollIndicator: false,\n        contentContainerStyle: {\n          paddingBottom: 0\n        },\n        keyboardShouldPersistTaps: \"always\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }\n      }, React.createElement(Spinner, {\n        visible: this.state.spinner,\n        textStyle: styles.spinnerTextStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }\n      }), React.createElement(Block, {\n        flex: true,\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }, React.createElement(Block, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }, React.createElement(Block, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        color: \"#4f3961\",\n        size: 25,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }\n      }, \"Fill Notes\")), React.createElement(Block, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        size: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }\n      }, \"All fields are required.\")), React.createElement(Block, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      }, React.createElement(Input, {\n        multiline: true,\n        style: {\n          height: 150\n        },\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            complain: text\n          });\n        },\n        placeholder: \"Word Limit: 100 Words\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }\n      }))), React.createElement(Block, {\n        center: true,\n        style: {\n          paddingBottom: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }\n      }, React.createElement(Button, {\n        style: styles.button,\n        color: \"#4f3961\",\n        onPress: this.submitBtnPressed,\n        textStyle: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      }, \"SUBMIT\"))));\n    }\n  }]);\n\n  return Parliament;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#fff2ff\",\n    height: height\n  },\n  button: {\n    width: width - 40,\n    height: 50,\n    shadowRadius: 10,\n    marginBottom: 10\n  },\n  title: {\n    marginTop: 20,\n    marginRight: 30,\n    marginLeft: 30\n  }\n});\nexport default Parliament;","map":{"version":3,"sources":["/Users/prashuk/Desktop/GitHub/React-Neeti-Zen/android_app/screens/Category/Parliament.js"],"names":["React","Block","Button","Text","Input","firebase","Spinner","Dimensions","get","width","height","Parliament","props","state","complain","ticketNumberDatabase","spinner","submitBtnPressed","alert","setState","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","postData","ticketNumber","description","name","global","currentUserName","date","type","status","assigned","database","ref","User","user","uid","push","set","then","updates","update","Alert","toString","text","onPress","navigation","goBack","cancelable","catch","error","console","log","message","on","snapshot","parseInt","val","paddingBottom","styles","spinnerTextStyle","container","title","button","color","Component","StyleSheet","create","backgroundColor","shadowRadius","marginBottom","marginTop","marginRight","marginLeft"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,KAA9B,QAA2C,iBAA3C;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAO,kBAAP;AACA,OAAOC,OAAP,MAAoB,sCAApB;;sBAE0BC,UAAU,CAACC,GAAX,CAAe,QAAf,C;IAAlBC,K,mBAAAA,K;IAAOC,M,mBAAAA,M;;IAETC,U;;;;;AAOJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AADiB,UANnBC,KAMmB,GANX;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,oBAAoB,EAAE,CAFhB;AAGNC,MAAAA,OAAO,EAAE;AAHH,KAMW;;AAAA,UAYnBC,gBAZmB,GAYA,YAAM;AACvB,UAAI,MAAKJ,KAAL,CAAWC,QAAX,KAAwB,EAA5B,EAAgC;AAC9BI,QAAAA,KAAK,CAAC,iBAAD,CAAL;AACA;AACD;;AAED,YAAKC,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAd;;AACA,UAAID,oBAAoB,GAAG,MAAKF,KAAL,CAAWE,oBAAtC;AAEA,UAAIK,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,UAAIC,EAAE,GAAGC,MAAM,CAACH,KAAK,CAACI,OAAN,EAAD,CAAN,CAAwBC,QAAxB,CAAiC,CAAjC,EAAoC,GAApC,CAAT;AACA,UAAIC,EAAE,GAAGH,MAAM,CAACH,KAAK,CAACO,QAAN,KAAmB,CAApB,CAAN,CAA6BF,QAA7B,CAAsC,CAAtC,EAAyC,GAAzC,CAAT;AACA,UAAIG,IAAI,GAAGR,KAAK,CAACS,WAAN,EAAX;AACAT,MAAAA,KAAK,GAAGE,EAAE,GAAG,GAAL,GAAWI,EAAX,GAAgB,GAAhB,GAAsBE,IAA9B;AAEA,UAAIE,QAAQ,GAAG;AACbC,QAAAA,YAAY,EAAEhB,oBADD;AAEbiB,QAAAA,WAAW,EAAE;AACXC,UAAAA,IAAI,EAAEC,MAAM,CAACC,eADF;AAEXC,UAAAA,IAAI,EAAEhB,KAFK;AAGXiB,UAAAA,IAAI,EAAE,YAHK;AAIXC,UAAAA,MAAM,EAAE,MAJG;AAKXC,UAAAA,QAAQ,EAAE,OALC;AAOXzB,UAAAA,QAAQ,EAAE,MAAKD,KAAL,CAAWC;AAPV;AAFA,OAAf;AAaAT,MAAAA,QAAQ,CACLmC,QADH,GAEGC,GAFH,CAEO,WAAWP,MAAM,CAACQ,IAAP,CAAYC,IAAZ,CAAiBC,GAA5B,GAAkC,yBAFzC,EAGGC,IAHH,GAIGC,GAJH,CAIOhB,QAJP,EAKGiB,IALH,CAKQ,YAAM;AACV,YAAIC,OAAO,GAAG,EAAd;AACAA,QAAAA,OAAO,CAAC,gBAAD,CAAP,GAA4BjC,oBAA5B;AAEAV,QAAAA,QAAQ,CACLmC,QADH,GAEGC,GAFH,GAGGQ,MAHH,CAGUD,OAHV,EAIGD,IAJH,CAKI,MAAK5B,QAAL,CAAc;AAAEH,UAAAA,OAAO,EAAE;AAAX,SAAd,CALJ,EAMIkC,KAAK,CAAChC,KAAN,CACE,uCACEH,oBAAoB,CAACoC,QAArB,EAFJ,EAGE,EAHF,EAIE,CACE;AACEC,UAAAA,IAAI,EAAE,IADR;AAEEC,UAAAA,OAAO,EAAE,mBAAM;AACb,kBAAKzC,KAAL,CAAW0C,UAAX,CAAsBC,MAAtB;AACD;AAJH,SADF,CAJF,EAYE;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAZF,CANJ,EAqBGC,KArBH,CAqBS,UAAUC,KAAV,EAAiB;AACtBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD,SAvBH;AAwBD,OAjCH;AAkCD,KA1EkB;;AAGjBxD,IAAAA,QAAQ,CACLmC,QADH,GAEGC,GAFH,CAEO,gBAFP,EAGGqB,EAHH,CAGM,OAHN,EAGe,UAACC,QAAD,EAAc;AACzB,UAAIhD,oBAAoB,GAAGiD,QAAQ,CAACD,QAAQ,CAACE,GAAT,EAAD,CAAnC;AACA,YAAKpD,KAAL,CAAWE,oBAAX,GAAkCA,oBAAoB,GAAG,CAAzD;AACD,KANH;AAHiB;AAUlB;;;;6BAkEQ;AAAA;;AACP,aACE,oBAAC,UAAD;AACE,QAAA,4BAA4B,EAAE,KADhC;AAEE,QAAA,qBAAqB,EAAE;AAAEmD,UAAAA,aAAa,EAAE;AAAjB,SAFzB;AAGE,QAAA,yBAAyB,EAAC,QAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,OAAD;AACE,QAAA,OAAO,EAAE,KAAKrD,KAAL,CAAWG,OADtB;AAEE,QAAA,SAAS,EAAEmD,MAAM,CAACC,gBAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EASE,oBAAC,KAAD;AAAO,QAAA,IAAI,MAAX;AAAY,QAAA,KAAK,EAAED,MAAM,CAACE,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEF,MAAM,CAACG,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAC,SAAZ;AAAsB,QAAA,IAAI,EAAE,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,EAME,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,CANF,EASE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,KAAK,EAAE;AAAE5D,UAAAA,MAAM,EAAE;AAAV,SAFT;AAGE,QAAA,YAAY,EAAE,sBAAC0C,IAAD,EAAU;AACtB,UAAA,MAAI,CAACjC,QAAL,CAAc;AAAEL,YAAAA,QAAQ,EAAEsC;AAAZ,WAAd;AACD,SALH;AAME,QAAA,WAAW,EAAC,uBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CATF,CADF,EAqBE,oBAAC,KAAD;AAAO,QAAA,MAAM,MAAb;AAAc,QAAA,KAAK,EAAE;AAAEc,UAAAA,aAAa,EAAE;AAAjB,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAEC,MAAM,CAACI,MADhB;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,OAAO,EAAE,KAAKtD,gBAHhB;AAIE,QAAA,SAAS,EAAE;AAAEuD,UAAAA,KAAK,EAAE;AAAT,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CArBF,CATF,CADF;AA4CD;;;;EAhIsBxE,KAAK,CAACyE,S;;AAmI/B,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,eAAe,EAAE,SADR;AAETlE,IAAAA,MAAM,EAAEA;AAFC,GADoB;AAK/B6D,EAAAA,MAAM,EAAE;AACN9D,IAAAA,KAAK,EAAEA,KAAK,GAAG,EADT;AAENC,IAAAA,MAAM,EAAE,EAFF;AAGNmE,IAAAA,YAAY,EAAE,EAHR;AAINC,IAAAA,YAAY,EAAE;AAJR,GALuB;AAW/BR,EAAAA,KAAK,EAAE;AACLS,IAAAA,SAAS,EAAE,EADN;AAELC,IAAAA,WAAW,EAAE,EAFR;AAGLC,IAAAA,UAAU,EAAE;AAHP;AAXwB,CAAlB,CAAf;AAkBA,eAAetE,UAAf","sourcesContent":["import React from \"react\";\nimport { StyleSheet, Dimensions, ScrollView, Alert } from \"react-native\";\nimport { Block, Button, Text, Input } from \"galio-framework\";\nimport * as firebase from \"firebase\";\nimport \"firebase/storage\";\nimport Spinner from \"react-native-loading-spinner-overlay\";\n\nconst { width, height } = Dimensions.get(\"screen\");\n\nclass Parliament extends React.Component {\n  state = {\n    complain: \"\",\n    ticketNumberDatabase: 0,\n    spinner: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    firebase\n      .database()\n      .ref(\"ticket/ticket/\")\n      .on(\"value\", (snapshot) => {\n        let ticketNumberDatabase = parseInt(snapshot.val());\n        this.state.ticketNumberDatabase = ticketNumberDatabase + 1;\n      });\n  }\n\n  submitBtnPressed = () => {\n    if (this.state.complain === \"\") {\n      alert(\"Fill all fields\");\n      return;\n    }\n\n    this.setState({ spinner: true });\n    var ticketNumberDatabase = this.state.ticketNumberDatabase;\n\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, \"0\");\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\");\n    var yyyy = today.getFullYear();\n    today = dd + \"/\" + mm + \"/\" + yyyy;\n\n    var postData = {\n      ticketNumber: ticketNumberDatabase,\n      description: {\n        name: global.currentUserName,\n        date: today,\n        type: \"parliament\",\n        status: \"open\",\n        assigned: \"admin\",\n\n        complain: this.state.complain,\n      },\n    };\n\n    firebase\n      .database()\n      .ref(\"users/\" + global.User.user.uid + \"/complaints/parliament/\")\n      .push()\n      .set(postData)\n      .then(() => {\n        var updates = {};\n        updates[\"ticket/ticket/\"] = ticketNumberDatabase;\n\n        firebase\n          .database()\n          .ref()\n          .update(updates)\n          .then(\n            this.setState({ spinner: false }),\n            Alert.alert(\n              \"Complain Submitted: Ticket Number \" +\n                ticketNumberDatabase.toString(),\n              \"\",\n              [\n                {\n                  text: \"OK\",\n                  onPress: () => {\n                    this.props.navigation.goBack();\n                  },\n                },\n              ],\n              { cancelable: false }\n            )\n          )\n          .catch(function (error) {\n            console.log(error.message);\n          });\n      });\n  };\n\n  render() {\n    return (\n      <ScrollView\n        showsVerticalScrollIndicator={false}\n        contentContainerStyle={{ paddingBottom: 0 }}\n        keyboardShouldPersistTaps=\"always\"\n      >\n        <Spinner\n          visible={this.state.spinner}\n          textStyle={styles.spinnerTextStyle}\n        />\n        <Block flex style={styles.container}>\n          <Block style={styles.title}>\n            <Block>\n              <Text color=\"#4f3961\" size={25}>\n                Fill Notes\n              </Text>\n            </Block>\n            <Block>\n              <Text size={12}>All fields are required.</Text>\n            </Block>\n            <Block>\n              <Input\n                multiline\n                style={{ height: 150 }}\n                onChangeText={(text) => {\n                  this.setState({ complain: text });\n                }}\n                placeholder=\"Word Limit: 100 Words\"\n              ></Input>\n            </Block>\n          </Block>\n          <Block center style={{ paddingBottom: 10 }}>\n            <Button\n              style={styles.button}\n              color=\"#4f3961\"\n              onPress={this.submitBtnPressed}\n              textStyle={{ color: \"white\" }}\n            >\n              SUBMIT\n            </Button>\n          </Block>\n        </Block>\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#fff2ff\",\n    height: height,\n  },\n  button: {\n    width: width - 40,\n    height: 50,\n    shadowRadius: 10,\n    marginBottom: 10,\n  },\n  title: {\n    marginTop: 20,\n    marginRight: 30,\n    marginLeft: 30,\n  },\n});\n\nexport default Parliament;\n"]},"metadata":{},"sourceType":"module"}