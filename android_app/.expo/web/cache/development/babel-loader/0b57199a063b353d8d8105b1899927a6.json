{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/prashuk/Desktop/GitHub/React-Neeti-Zen/android_app/screens/Dashboard/Active.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text } from \"galio-framework\";\n\nvar ActiveScreen = function (_React$Component) {\n  _inherits(ActiveScreen, _React$Component);\n\n  var _super = _createSuper(ActiveScreen);\n\n  function ActiveScreen(props) {\n    var _this;\n\n    _classCallCheck(this, ActiveScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: global.DATA\n    };\n    return _this;\n  }\n\n  _createClass(ActiveScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      setInterval(function () {\n        if (_this2.state.data !== global.DATA) {\n          _this2.setState({\n            data: global.DATA\n          });\n        }\n      }, 3000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var navigation = this.props.navigation;\n\n      function Item(_ref) {\n        var title = _ref.title;\n        return React.createElement(View, {\n          style: styles.item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 9\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"TicketDetails\", {\n              title: title\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          style: styles.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }\n        }, title)));\n      }\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }\n      }, React.createElement(SectionList, {\n        sections: this.state.data,\n        keyExtractor: function keyExtractor(item, index) {\n          return item + index;\n        },\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return React.createElement(Item, {\n            title: item,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 37\n            }\n          });\n        },\n        renderSectionHeader: function renderSectionHeader(_ref3) {\n          var title = _ref3.section.title;\n          return React.createElement(Text, {\n            style: styles.header,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 13\n            }\n          }, title);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return ActiveScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  item: {\n    backgroundColor: \"#fff\",\n    paddingTop: 12,\n    paddingBottom: 12,\n    paddingLeft: 30,\n    marginVertical: 1\n  },\n  header: {\n    fontSize: 17,\n    backgroundColor: \"#fff2ff\",\n    paddingLeft: 18,\n    paddingTop: 5,\n    paddingBottom: 5\n  },\n  title: {\n    fontSize: 14\n  }\n});\nexport default ActiveScreen;","map":{"version":3,"sources":["/Users/prashuk/Desktop/GitHub/React-Neeti-Zen/android_app/screens/Dashboard/Active.js"],"names":["React","Text","ActiveScreen","props","state","data","global","DATA","setInterval","setState","navigation","Item","title","styles","item","navigate","index","section","header","Component","StyleSheet","create","backgroundColor","paddingTop","paddingBottom","paddingLeft","marginVertical","fontSize"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAGA,SAASC,IAAT,QAAqB,iBAArB;;IAEMC,Y;;;;;AAKJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AADiB,UAJnBC,KAImB,GAJX;AACNC,MAAAA,IAAI,EAAEC,MAAM,CAACC;AADP,KAIW;AAAA;AAElB;;;;wCAEmB;AAAA;;AAClBC,MAAAA,WAAW,CAAC,YAAM;AAChB,YAAI,MAAI,CAACJ,KAAL,CAAWC,IAAX,KAAoBC,MAAM,CAACC,IAA/B,EAAqC;AACnC,UAAA,MAAI,CAACE,QAAL,CAAc;AAAEJ,YAAAA,IAAI,EAAEC,MAAM,CAACC;AAAf,WAAd;AACD;AACF,OAJU,EAIR,IAJQ,CAAX;AAKD;;;6BAEQ;AAAA,UACCG,UADD,GACgB,KAAKP,KADrB,CACCO,UADD;;AAGP,eAASC,IAAT,OAAyB;AAAA,YAATC,KAAS,QAATA,KAAS;AACvB,eACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEC,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,gBAAD;AACE,UAAA,OAAO,EAAE;AAAA,mBACPJ,UAAU,CAACK,QAAX,CAAoB,eAApB,EAAqC;AACnCH,cAAAA,KAAK,EAAEA;AAD4B,aAArC,CADO;AAAA,WADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEC,MAAM,CAACD,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4BA,KAA5B,CAPF,CADF,CADF;AAaD;;AAED,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AACE,QAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWC,IADvB;AAEE,QAAA,YAAY,EAAE,sBAACS,IAAD,EAAOE,KAAP;AAAA,iBAAiBF,IAAI,GAAGE,KAAxB;AAAA,SAFhB;AAGE,QAAA,UAAU,EAAE;AAAA,cAAGF,IAAH,SAAGA,IAAH;AAAA,iBAAc,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAEA,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAd;AAAA,SAHd;AAIE,QAAA,mBAAmB,EAAE;AAAA,cAAcF,KAAd,SAAGK,OAAH,CAAcL,KAAd;AAAA,iBACnB,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAEC,MAAM,CAACK,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA6BN,KAA7B,CADmB;AAAA,SAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAYD;;;;EAhDwBZ,KAAK,CAACmB,S;;AAmDjC,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,IAAI,EAAE;AACJQ,IAAAA,eAAe,EAAE,MADb;AAEJC,IAAAA,UAAU,EAAE,EAFR;AAGJC,IAAAA,aAAa,EAAE,EAHX;AAIJC,IAAAA,WAAW,EAAE,EAJT;AAKJC,IAAAA,cAAc,EAAE;AALZ,GADyB;AAQ/BR,EAAAA,MAAM,EAAE;AACNS,IAAAA,QAAQ,EAAE,EADJ;AAENL,IAAAA,eAAe,EAAE,SAFX;AAGNG,IAAAA,WAAW,EAAE,EAHP;AAINF,IAAAA,UAAU,EAAE,CAJN;AAKNC,IAAAA,aAAa,EAAE;AALT,GARuB;AAe/BZ,EAAAA,KAAK,EAAE;AACLe,IAAAA,QAAQ,EAAE;AADL;AAfwB,CAAlB,CAAf;AAoBA,eAAezB,YAAf","sourcesContent":["import React from \"react\";\n\nimport { StyleSheet, View, SectionList, TouchableOpacity } from \"react-native\";\nimport { Text } from \"galio-framework\";\n\nclass ActiveScreen extends React.Component {\n  state = {\n    data: global.DATA,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      if (this.state.data !== global.DATA) {\n        this.setState({ data: global.DATA });\n      }\n    }, 3000);\n  }\n\n  render() {\n    const { navigation } = this.props;\n\n    function Item({ title }) {\n      return (\n        <View style={styles.item}>\n          <TouchableOpacity\n            onPress={() =>\n              navigation.navigate(\"TicketDetails\", {\n                title: title,\n              })\n            }\n          >\n            <Text style={styles.title}>{title}</Text>\n          </TouchableOpacity>\n        </View>\n      );\n    }\n\n    return (\n      <View>\n        <SectionList\n          sections={this.state.data}\n          keyExtractor={(item, index) => item + index}\n          renderItem={({ item }) => <Item title={item} />}\n          renderSectionHeader={({ section: { title } }) => (\n            <Text style={styles.header}>{title}</Text>\n          )}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  item: {\n    backgroundColor: \"#fff\",\n    paddingTop: 12,\n    paddingBottom: 12,\n    paddingLeft: 30,\n    marginVertical: 1,\n  },\n  header: {\n    fontSize: 17,\n    backgroundColor: \"#fff2ff\",\n    paddingLeft: 18,\n    paddingTop: 5,\n    paddingBottom: 5,\n  },\n  title: {\n    fontSize: 14,\n  },\n});\n\nexport default ActiveScreen;\n"]},"metadata":{},"sourceType":"module"}