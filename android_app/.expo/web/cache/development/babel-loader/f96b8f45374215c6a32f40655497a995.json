{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/prashuk/Desktop/Github/Neeti-Zen/android_app/screens/Event.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Block, Button, Text, theme, Input } from \"galio-framework\";\nimport { Dropdown } from \"react-native-material-dropdown\";\nimport RBSheet from \"react-native-raw-bottom-sheet\";\nimport Sheet from \"../components/Sheet\";\nimport Spinner from \"react-native-loading-spinner-overlay\";\nimport * as firebase from \"firebase\";\nimport \"firebase/storage\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width;\n\nvar data = [{\n  value: \"Birthday\"\n}, {\n  value: \"Marriage\"\n}, {\n  value: \"Conference\"\n}, {\n  value: \"Book Festival\"\n}, {\n  value: \"Religious Festivities\"\n}, {\n  value: \"Wedding Ceremony\"\n}, {\n  value: \"Film Festival\"\n}, {\n  value: \"Film Preview\"\n}, {\n  value: \"Inauguration\"\n}];\n\nvar Event = function (_React$Component) {\n  _inherits(Event, _React$Component);\n\n  var _super = _createSuper(Event);\n\n  function Event(props) {\n    var _this;\n\n    _classCallCheck(this, Event);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      patientName: \"\",\n      address: \"\",\n      phone: \"\",\n      email: \"\",\n      occasion: \"\",\n      availability: \"05/25/2020\",\n      imgInvitation: \"\",\n      notes: \"\",\n      btnId: \"\",\n      ticketNumberDatabase: 0,\n      spinner: false\n    };\n\n    _this.handleImage = function (img) {\n      if (_this.state.btnId === \"invitation\") {\n        _this.setState({\n          imgInvitation: img\n        });\n      }\n\n      _this.RBSheet.close();\n\n      Alert.alert(\"Uploaded\");\n    };\n\n    _this.uploadImage = function _callee(uri, name, ticket) {\n      var response, blob, imageRef, url;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(uri));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.blob());\n\n            case 5:\n              blob = _context.sent;\n              imageRef = firebase.storage().ref().child(\"images/\" + ticket.toString() + \"/\" + name + \".jpg\");\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(imageRef.put(blob, {\n                contentType: \"image/jpg\"\n              }).catch(function (error) {\n                throw error;\n              }));\n\n            case 9:\n              _context.next = 11;\n              return _regeneratorRuntime.awrap(imageRef.getDownloadURL().catch(function (error) {\n                throw error;\n              }));\n\n            case 11:\n              url = _context.sent;\n              return _context.abrupt(\"return\", url);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.submitBtnPressed = function _callee2() {\n      var ticketNumberDatabase, today, dd, mm, yyyy, invitationImgURL, postData;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(_this.state.patientName === \"\" || _this.state.address === \"\" || _this.state.phone === \"\" || _this.state.email === \"\" || _this.state.occasion === \"\" || _this.state.availability === \"\" || _this.state.imgInvitation === \"\" || _this.state.notes === \"\")) {\n                _context2.next = 3;\n                break;\n              }\n\n              alert(\"Fill all fields\");\n              return _context2.abrupt(\"return\");\n\n            case 3:\n              _this.setState({\n                spinner: true\n              });\n\n              ticketNumberDatabase = _this.state.ticketNumberDatabase;\n              today = new Date();\n              dd = String(today.getDate()).padStart(2, \"0\");\n              mm = String(today.getMonth() + 1).padStart(2, \"0\");\n              yyyy = today.getFullYear();\n              today = dd + \"/\" + mm + \"/\" + yyyy;\n              _context2.next = 12;\n              return _regeneratorRuntime.awrap(_this.uploadImage(_this.state.imgInvitation, \"aadhar_\" + global.User.user.email + \"_event_\" + ticketNumberDatabase.toString() + \".jpg\", ticketNumberDatabase));\n\n            case 12:\n              invitationImgURL = _context2.sent;\n              postData = {\n                ticketNumber: ticketNumberDatabase,\n                description: {\n                  name: global.currentUserName,\n                  date: today,\n                  type: \"event\",\n                  status: \"open\",\n                  assigned: \"admin\",\n                  nameOfPatient: _this.state.patientName,\n                  address: _this.state.address,\n                  phoneNumber: _this.state.phone,\n                  email: _this.state.email,\n                  occasion: _this.state.occasion,\n                  dateOfAvailability: _this.state.availability,\n                  invitationCard: invitationImgURL,\n                  notes: _this.state.notes\n                }\n              };\n              firebase.database().ref(\"users/\" + global.User.user.uid + \"/complaints/event/\").push().set(postData).then(function () {\n                var updates = {};\n                updates[\"ticket/ticket/\"] = ticketNumberDatabase;\n                firebase.database().ref().update(updates).then(_this.setState({\n                  spinner: false\n                }), Alert.alert(\"Complain Submitted: Ticket Number \" + ticketNumberDatabase.toString(), \"Your request has been submitted and is pending approval.\", [{\n                  text: \"OK\",\n                  onPress: function onPress() {\n                    _this.props.navigation.goBack();\n                  }\n                }], {\n                  cancelable: false\n                })).catch(function (error) {\n                  console.log(error.message);\n                });\n              });\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    firebase.database().ref(\"ticket/ticket/\").on(\"value\", function (snapshot) {\n      var ticketNumberDatabase = parseInt(snapshot.val());\n      _this.state.ticketNumberDatabase = ticketNumberDatabase + 1;\n    });\n    return _this;\n  }\n\n  _createClass(Event, [{\n    key: \"uploadBtnPressed\",\n    value: function uploadBtnPressed(event, buttonId) {\n      this.RBSheet.open();\n      this.setState({\n        btnId: buttonId\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ScrollView, {\n        showsVerticalScrollIndicator: true,\n        contentContainerStyle: {\n          paddingBottom: 0\n        },\n        keyboardShouldPersistTaps: \"always\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 7\n        }\n      }, React.createElement(Spinner, {\n        visible: this.state.spinner,\n        textStyle: styles.spinnerTextStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 9\n        }\n      }), React.createElement(Block, {\n        flex: true,\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }\n      }, React.createElement(Block, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }\n      }, React.createElement(Block, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        color: \"#4f3961\",\n        size: 25,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }\n      }, \"Fill Form\")), React.createElement(Block, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }\n      }, React.createElement(Input, {\n        placeholder: \"Name of Patient\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            patientName: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }\n      })), React.createElement(Block, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }\n      }, React.createElement(Input, {\n        placeholder: \"Address\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            address: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 15\n        }\n      })), React.createElement(Block, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }\n      }, React.createElement(Input, {\n        placeholder: \"Phone Number\",\n        type: \"number-pad\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            phone: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 15\n        }\n      })), React.createElement(Block, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }\n      }, React.createElement(Input, {\n        placeholder: \"Email\",\n        type: \"email-address\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            email: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 15\n        }\n      })), React.createElement(Block, {\n        style: {\n          backgroundColor: \"white\",\n          marginBottom: 10,\n          borderRadius: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }\n      }, React.createElement(Dropdown, {\n        label: \"Occasion\",\n        data: data,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            occasion: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 15\n        }\n      })), React.createElement(Button, {\n        style: styles.sideButton,\n        color: \"#4f3961\",\n        textStyle: {\n          color: \"white\"\n        },\n        onPress: function onPress() {\n          return navigation.navigate(\"Available Dates\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }\n      }, \"Check Availability & Invitation Request\"), React.createElement(Button, {\n        style: styles.sideButton,\n        color: \"#4f3961\",\n        onPress: function onPress(event) {\n          return _this2.uploadBtnPressed(event, \"invitation\");\n        },\n        textStyle: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }\n      }, \"Upload Invitation Card\"), React.createElement(Block, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }\n      }, React.createElement(Input, {\n        placeholder: \"Word Limit: 100 Words\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            notes: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 15\n        }\n      }))), React.createElement(Block, {\n        center: true,\n        style: {\n          paddingBottom: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }\n      }, React.createElement(Button, {\n        style: styles.button,\n        color: \"#4f3961\",\n        onPress: this.submitBtnPressed,\n        textStyle: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }\n      }, \"SUBMIT\"))), React.createElement(RBSheet, {\n        ref: function ref(_ref) {\n          _this2.RBSheet = _ref;\n        },\n        height: 150,\n        duration: 250,\n        customStyles: {\n          container: {\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 9\n        }\n      }, React.createElement(Sheet, {\n        imageSelect: this.handleImage,\n        navigation: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return Event;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#fff2ff\"\n  },\n  button: {\n    width: width - 40,\n    height: 50,\n    shadowRadius: 10,\n    marginBottom: 10\n  },\n  sideButton: {\n    width: width - 60,\n    height: 50,\n    shadowRadius: 10,\n    marginBottom: 10\n  },\n  title: {\n    marginTop: 20,\n    marginRight: 30,\n    marginLeft: 30\n  },\n  drop: {\n    width: width - theme.SIZES.BASE * 4,\n    height: theme.SIZES.BASE * 3,\n    marginBottom: 10\n  }\n});\nexport default Event;","map":{"version":3,"sources":["/Users/prashuk/Desktop/Github/Neeti-Zen/android_app/screens/Event.js"],"names":["React","Block","Button","Text","theme","Input","Dropdown","RBSheet","Sheet","Spinner","firebase","Dimensions","get","width","data","value","Event","props","state","patientName","address","phone","email","occasion","availability","imgInvitation","notes","btnId","ticketNumberDatabase","spinner","handleImage","img","setState","close","Alert","alert","uploadImage","uri","name","ticket","fetch","response","blob","imageRef","storage","ref","child","toString","put","contentType","catch","error","getDownloadURL","url","submitBtnPressed","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","global","User","user","invitationImgURL","postData","ticketNumber","description","currentUserName","date","type","status","assigned","nameOfPatient","phoneNumber","dateOfAvailability","invitationCard","database","uid","push","set","then","updates","update","text","onPress","navigation","goBack","cancelable","console","log","message","on","snapshot","parseInt","val","event","buttonId","open","paddingBottom","styles","spinnerTextStyle","container","title","backgroundColor","marginBottom","borderRadius","sideButton","color","navigate","uploadBtnPressed","button","justifyContent","alignItems","Component","StyleSheet","create","height","shadowRadius","marginTop","marginRight","marginLeft","drop","SIZES","BASE"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { StyleSheet, Dimensions, ScrollView, Alert } from \"react-native\";\nimport { Block, Button, Text, theme, Input } from \"galio-framework\";\nimport { Dropdown } from \"react-native-material-dropdown\";\nimport RBSheet from \"react-native-raw-bottom-sheet\";\nimport Sheet from \"../components/Sheet\";\nimport Spinner from \"react-native-loading-spinner-overlay\";\nimport * as firebase from \"firebase\";\nimport \"firebase/storage\";\n\nconst { width } = Dimensions.get(\"screen\");\n\nconst data = [\n  {\n    value: \"Birthday\",\n  },\n  {\n    value: \"Marriage\",\n  },\n  {\n    value: \"Conference\",\n  },\n  {\n    value: \"Book Festival\",\n  },\n  {\n    value: \"Religious Festivities\",\n  },\n  {\n    value: \"Wedding Ceremony\",\n  },\n  {\n    value: \"Film Festival\",\n  },\n  {\n    value: \"Film Preview\",\n  },\n  {\n    value: \"Inauguration\",\n  },\n];\n\nclass Event extends React.Component {\n  state = {\n    patientName: \"\",\n    address: \"\",\n    phone: \"\",\n    email: \"\",\n    occasion: \"\",\n    availability: \"05/25/2020\",\n    imgInvitation: \"\",\n    notes: \"\",\n    btnId: \"\",\n    ticketNumberDatabase: 0,\n    spinner: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    firebase\n      .database()\n      .ref(\"ticket/ticket/\")\n      .on(\"value\", (snapshot) => {\n        let ticketNumberDatabase = parseInt(snapshot.val());\n        this.state.ticketNumberDatabase = ticketNumberDatabase + 1;\n      });\n  }\n\n  uploadBtnPressed(event, buttonId) {\n    this.RBSheet.open();\n    this.setState({ btnId: buttonId });\n  }\n\n  handleImage = (img) => {\n    if (this.state.btnId === \"invitation\") {\n      this.setState({ imgInvitation: img });\n    }\n    this.RBSheet.close();\n    Alert.alert(\"Uploaded\");\n  };\n\n  uploadImage = async (uri, name, ticket) => {\n    const response = await fetch(uri);\n    const blob = await response.blob();\n\n    const imageRef = firebase\n      .storage()\n      .ref()\n      .child(\"images/\" + ticket.toString() + \"/\" + name + \".jpg\");\n    await imageRef.put(blob, { contentType: \"image/jpg\" }).catch((error) => {\n      throw error;\n    });\n    const url = await imageRef.getDownloadURL().catch((error) => {\n      throw error;\n    });\n    return url;\n  };\n\n  submitBtnPressed = async () => {\n    if (\n      this.state.patientName === \"\" ||\n      this.state.address === \"\" ||\n      this.state.phone === \"\" ||\n      this.state.email === \"\" ||\n      this.state.occasion === \"\" ||\n      this.state.availability === \"\" ||\n      this.state.imgInvitation === \"\" ||\n      this.state.notes === \"\"\n    ) {\n      alert(\"Fill all fields\");\n      return;\n    }\n\n    this.setState({ spinner: true });\n    var ticketNumberDatabase = this.state.ticketNumberDatabase;\n\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, \"0\");\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\");\n    var yyyy = today.getFullYear();\n    today = dd + \"/\" + mm + \"/\" + yyyy;\n\n    const invitationImgURL = await this.uploadImage(\n      this.state.imgInvitation,\n      \"aadhar_\" +\n        global.User.user.email +\n        \"_event_\" +\n        ticketNumberDatabase.toString() +\n        \".jpg\",\n      ticketNumberDatabase\n    );\n\n    var postData = {\n      ticketNumber: ticketNumberDatabase,\n      description: {\n        name: global.currentUserName,\n        date: today,\n        type: \"event\",\n        status: \"open\",\n        assigned: \"admin\",\n\n        nameOfPatient: this.state.patientName,\n        address: this.state.address,\n        phoneNumber: this.state.phone,\n        email: this.state.email,\n        occasion: this.state.occasion,\n        dateOfAvailability: this.state.availability,\n        invitationCard: invitationImgURL,\n        notes: this.state.notes,\n      },\n    };\n\n    firebase\n      .database()\n      .ref(\"users/\" + global.User.user.uid + \"/complaints/event/\")\n      .push()\n      .set(postData)\n      .then(() => {\n        var updates = {};\n        updates[\"ticket/ticket/\"] = ticketNumberDatabase;\n\n        firebase\n          .database()\n          .ref()\n          .update(updates)\n          .then(\n            this.setState({ spinner: false }),\n            Alert.alert(\n              \"Complain Submitted: Ticket Number \" +\n                ticketNumberDatabase.toString(),\n              \"Your request has been submitted and is pending approval.\",\n              [\n                {\n                  text: \"OK\",\n                  onPress: () => {\n                    this.props.navigation.goBack();\n                  },\n                },\n              ],\n              { cancelable: false }\n            )\n          )\n          .catch(function (error) {\n            console.log(error.message);\n          });\n      });\n  };\n\n  render() {\n    return (\n      <ScrollView\n        showsVerticalScrollIndicator={true}\n        contentContainerStyle={{ paddingBottom: 0 }}\n        keyboardShouldPersistTaps=\"always\"\n      >\n        <Spinner\n          visible={this.state.spinner}\n          textStyle={styles.spinnerTextStyle}\n        />\n        <Block flex style={styles.container}>\n          <Block style={styles.title}>\n            <Block>\n              <Text color=\"#4f3961\" size={25}>\n                Fill Form\n              </Text>\n            </Block>\n            <Block>\n              <Input\n                placeholder=\"Name of Patient\"\n                onChangeText={(text) => {\n                  this.setState({ patientName: text });\n                }}\n              ></Input>\n            </Block>\n            <Block>\n              <Input\n                placeholder=\"Address\"\n                onChangeText={(text) => {\n                  this.setState({ address: text });\n                }}\n              ></Input>\n            </Block>\n            <Block>\n              <Input\n                placeholder=\"Phone Number\"\n                type={\"number-pad\"}\n                onChangeText={(text) => {\n                  this.setState({ phone: text });\n                }}\n              ></Input>\n            </Block>\n            <Block>\n              <Input\n                placeholder=\"Email\"\n                type={\"email-address\"}\n                onChangeText={(text) => {\n                  this.setState({ email: text });\n                }}\n              ></Input>\n            </Block>\n            <Block\n              style={{\n                backgroundColor: \"white\",\n                marginBottom: 10,\n                borderRadius: 10,\n              }}\n            >\n              <Dropdown\n                label=\"Occasion\"\n                data={data}\n                onChangeText={(text) => {\n                  this.setState({ occasion: text });\n                }}\n              />\n            </Block>\n            <Button\n              style={styles.sideButton}\n              color=\"#4f3961\"\n              textStyle={{ color: \"white\" }}\n              onPress={() => navigation.navigate(\"Available Dates\")}\n            >\n              Check Availability & Invitation Request\n            </Button>\n            <Button\n              style={styles.sideButton}\n              color=\"#4f3961\"\n              onPress={(event) => this.uploadBtnPressed(event, \"invitation\")}\n              textStyle={{ color: \"white\" }}\n            >\n              Upload Invitation Card\n            </Button>\n            <Block>\n              <Input\n                placeholder=\"Word Limit: 100 Words\"\n                onChangeText={(text) => {\n                  this.setState({ notes: text });\n                }}\n              ></Input>\n            </Block>\n          </Block>\n          <Block center style={{ paddingBottom: 10 }}>\n            <Button\n              style={styles.button}\n              color=\"#4f3961\"\n              onPress={this.submitBtnPressed}\n              textStyle={{ color: \"white\" }}\n            >\n              SUBMIT\n            </Button>\n          </Block>\n        </Block>\n        <RBSheet\n          ref={(ref) => {\n            this.RBSheet = ref;\n          }}\n          height={150}\n          duration={250}\n          customStyles={{\n            container: {\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            },\n          }}\n        >\n          <Sheet\n            imageSelect={this.handleImage}\n            navigation={this.props.navigation}\n          />\n        </RBSheet>\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#fff2ff\",\n  },\n  button: {\n    width: width - 40,\n    height: 50,\n    shadowRadius: 10,\n    marginBottom: 10,\n  },\n  sideButton: {\n    width: width - 60,\n    height: 50,\n    shadowRadius: 10,\n    marginBottom: 10,\n  },\n  title: {\n    marginTop: 20,\n    marginRight: 30,\n    marginLeft: 30,\n  },\n  drop: {\n    width: width - theme.SIZES.BASE * 4,\n    height: theme.SIZES.BASE * 3,\n    marginBottom: 10,\n  },\n});\n\nexport default Event;\n"]},"metadata":{},"sourceType":"module"}