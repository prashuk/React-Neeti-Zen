{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { canGetUserMedia } from \"./CameraModule/UserMediaManager\";\nexport default {\n  get name() {\n    return 'ExponentCameraManager';\n  },\n\n  get Type() {\n    return {\n      back: 'back',\n      front: 'front'\n    };\n  },\n\n  get FlashMode() {\n    return {\n      on: 'on',\n      off: 'off',\n      auto: 'auto',\n      torch: 'torch'\n    };\n  },\n\n  get AutoFocus() {\n    return {\n      on: 'on',\n      off: 'off',\n      auto: 'auto',\n      singleShot: 'singleShot'\n    };\n  },\n\n  get WhiteBalance() {\n    return {\n      auto: 'auto',\n      continuous: 'continuous',\n      manual: 'manual'\n    };\n  },\n\n  get VideoQuality() {\n    return {};\n  },\n\n  isAvailableAsync: function isAvailableAsync() {\n    return _regeneratorRuntime.async(function isAvailableAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", canGetUserMedia());\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  takePicture: function takePicture(options, camera) {\n    return _regeneratorRuntime.async(function takePicture$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(camera.takePicture(options));\n\n          case 2:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  pausePreview: function pausePreview(camera) {\n    return _regeneratorRuntime.async(function pausePreview$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(camera.pausePreview());\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  resumePreview: function resumePreview(camera) {\n    return _regeneratorRuntime.async(function resumePreview$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(camera.resumePreview());\n\n          case 2:\n            return _context4.abrupt(\"return\", _context4.sent);\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getAvailableCameraTypesAsync: function getAvailableCameraTypesAsync(camera) {\n    return _regeneratorRuntime.async(function getAvailableCameraTypesAsync$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (canGetUserMedia()) {\n              _context5.next = 2;\n              break;\n            }\n\n            return _context5.abrupt(\"return\", []);\n\n          case 2:\n            _context5.next = 4;\n            return _regeneratorRuntime.awrap(camera.getAvailableCameraTypesAsync());\n\n          case 4:\n            return _context5.abrupt(\"return\", _context5.sent);\n\n          case 5:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getAvailablePictureSizes: function getAvailablePictureSizes(ratio, camera) {\n    return _regeneratorRuntime.async(function getAvailablePictureSizes$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _regeneratorRuntime.awrap(camera.getAvailablePictureSizes(ratio));\n\n          case 2:\n            return _context6.abrupt(\"return\", _context6.sent);\n\n          case 3:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n};","map":{"version":3,"sources":["../src/ExponentCameraManager.web.ts"],"names":[],"mappings":";AAEA,SAAS,eAAT;AAEA,eAAe;AACb,MAAI,IAAJ,GAAQ;AACN,WAAO,uBAAP;AACD,GAHY;;AAIb,MAAI,IAAJ,GAAQ;AACN,WAAO;AACL,MAAA,IAAI,EAAE,MADD;AAEL,MAAA,KAAK,EAAE;AAFF,KAAP;AAID,GATY;;AAUb,MAAI,SAAJ,GAAa;AACX,WAAO;AACL,MAAA,EAAE,EAAE,IADC;AAEL,MAAA,GAAG,EAAE,KAFA;AAGL,MAAA,IAAI,EAAE,MAHD;AAIL,MAAA,KAAK,EAAE;AAJF,KAAP;AAMD,GAjBY;;AAkBb,MAAI,SAAJ,GAAa;AACX,WAAO;AACL,MAAA,EAAE,EAAE,IADC;AAEL,MAAA,GAAG,EAAE,KAFA;AAGL,MAAA,IAAI,EAAE,MAHD;AAIL,MAAA,UAAU,EAAE;AAJP,KAAP;AAMD,GAzBY;;AA0Bb,MAAI,YAAJ,GAAgB;AACd,WAAO;AACL,MAAA,IAAI,EAAE,MADD;AAEL,MAAA,UAAU,EAAE,YAFP;AAGL,MAAA,MAAM,EAAE;AAHH,KAAP;AAKD,GAhCY;;AAiCb,MAAI,YAAJ,GAAgB;AACd,WAAO,EAAP;AACD,GAnCY;;AAoCP,EAAA,gBApCO;AAAA;AAAA;AAAA;AAAA;AAAA,6CAqCJ,eAAe,EArCX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2CP,EAAA,WA3CO,uBA2CK,OA3CL,EA2C8B,MA3C9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CA4CE,MAAM,CAAC,WAAP,CAAmB,OAAnB,CA5CF;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8CP,EAAA,YA9CO,wBA8CM,MA9CN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CA+CL,MAAM,CAAC,YAAP,EA/CK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiDP,EAAA,aAjDO,yBAiDO,MAjDP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAkDE,MAAM,CAAC,aAAP,EAlDF;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoDP,EAAA,4BApDO,wCAoDsB,MApDtB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAqDN,eAAe,EArDT;AAAA;AAAA;AAAA;;AAAA,8CAqDoB,EArDpB;;AAAA;AAAA;AAAA,6CAsDE,MAAM,CAAC,4BAAP,EAtDF;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwDP,EAAA,wBAxDO,oCAwDkB,KAxDlB,EAwDiC,MAxDjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAyDE,MAAM,CAAC,wBAAP,CAAgC,KAAhC,CAzDF;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf","sourcesContent":["import { CapturedPicture, PictureOptions } from './Camera.types';\nimport ExponentCamera from './ExponentCamera.web';\nimport { canGetUserMedia } from './CameraModule/UserMediaManager';\n\nexport default {\n  get name(): string {\n    return 'ExponentCameraManager';\n  },\n  get Type() {\n    return {\n      back: 'back',\n      front: 'front',\n    };\n  },\n  get FlashMode() {\n    return {\n      on: 'on',\n      off: 'off',\n      auto: 'auto',\n      torch: 'torch',\n    };\n  },\n  get AutoFocus() {\n    return {\n      on: 'on',\n      off: 'off',\n      auto: 'auto',\n      singleShot: 'singleShot',\n    };\n  },\n  get WhiteBalance() {\n    return {\n      auto: 'auto',\n      continuous: 'continuous',\n      manual: 'manual',\n    };\n  },\n  get VideoQuality() {\n    return {};\n  },\n  async isAvailableAsync(): Promise<boolean> {\n    return canGetUserMedia();\n  },\n\n  // TODO: Bacon: Is video possible?\n  // record(options): Promise\n  // stopRecording(): Promise<void>\n  async takePicture(options: PictureOptions, camera: ExponentCamera): Promise<CapturedPicture> {\n    return await camera.takePicture(options);\n  },\n  async pausePreview(camera: ExponentCamera): Promise<void> {\n    await camera.pausePreview();\n  },\n  async resumePreview(camera: ExponentCamera): Promise<any> {\n    return await camera.resumePreview();\n  },\n  async getAvailableCameraTypesAsync(camera: ExponentCamera): Promise<string[]> {\n    if (!canGetUserMedia()) return [];\n    return await camera.getAvailableCameraTypesAsync();\n  },\n  async getAvailablePictureSizes(ratio: string, camera: ExponentCamera): Promise<string[]> {\n    return await camera.getAvailablePictureSizes(ratio);\n  },\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}