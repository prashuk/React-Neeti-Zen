{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/prashuk/Desktop/Github/Neeti-Zen/android_app/screens/Dashboard/Home.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text, Icon } from \"galio-framework\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { refresh } from \"../../constants/Data\";\nimport ActiveScreen from \"./Active\";\nimport InProgressScreen from \"./InProgress\";\nimport CompletedScreen from \"./Close\";\nimport UpdateScreen from \"./Update\";\nimport DashboardScreen from \"./Dashboard\";\nvar Tab = createBottomTabNavigator();\n\nfunction MyTabBar(_ref) {\n  var state = _ref.state,\n      descriptors = _ref.descriptors,\n      navigation = _ref.navigation;\n  return React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      borderTopWidth: 1,\n      borderTopColor: \"#DCDCDC\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, state.routes.map(function (route, index) {\n    var options = descriptors[route.key].options;\n    var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    var isFocused = state.index === index;\n\n    var onPress = function onPress() {\n      refresh();\n      var event = navigation.emit({\n        type: \"tabPress\",\n        target: route.key\n      });\n\n      if (!isFocused && !event.defaultPrevented) {\n        navigation.navigate(route.name);\n      }\n    };\n\n    var onLongPress = function onLongPress() {\n      navigation.emit({\n        type: \"tabLongPress\",\n        target: route.key\n      });\n    };\n\n    return React.createElement(TouchableOpacity, {\n      accessibilityRole: \"button\",\n      accessibilityStates: isFocused ? [\"selected\"] : [],\n      accessibilityLabel: options.tabBarAccessibilityLabel,\n      testID: options.tabBarTestID,\n      onPress: onPress,\n      onLongPress: onLongPress,\n      style: {\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, React.createElement(Icon, {\n      name: label === \"Home\" ? \"ios-home\" : label === \"Update\" ? \"ios-arrow-down\" : label === \"Active\" ? \"ios-open\" : label === \"In Progress\" ? \"ios-book\" : label === \"Completed\" ? \"ios-cloud-done\" : \"\",\n      family: \"Ionicon\",\n      size: 25,\n      color: isFocused ? \"red\" : \"#888888\",\n      style: {\n        marginTop: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }), React.createElement(Text, {\n      style: {\n        color: isFocused ? \"red\" : \"#888888\",\n        fontSize: 12,\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, label));\n  }));\n}\n\nvar Home = function (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  var _super = _createSuper(Home);\n\n  function Home(props) {\n    _classCallCheck(this, Home);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Home, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Tab.Navigator, {\n        tabBar: function tabBar(props) {\n          return React.createElement(MyTabBar, _extends({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 41\n            }\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 7\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Home\",\n        component: DashboardScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Update\",\n        component: UpdateScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Active\",\n        component: ActiveScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"In Progress\",\n        component: InProgressScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Completed\",\n        component: CompletedScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nexport default Home;","map":{"version":3,"sources":["/Users/prashuk/Desktop/Github/Neeti-Zen/android_app/screens/Dashboard/Home.js"],"names":["React","Text","Icon","createBottomTabNavigator","refresh","ActiveScreen","InProgressScreen","CompletedScreen","UpdateScreen","DashboardScreen","Tab","MyTabBar","state","descriptors","navigation","flexDirection","borderTopWidth","borderTopColor","routes","map","route","index","options","key","label","tabBarLabel","undefined","title","name","isFocused","onPress","event","emit","type","target","defaultPrevented","navigate","onLongPress","tabBarAccessibilityLabel","tabBarTestID","flex","alignItems","justifyContent","height","marginTop","color","fontSize","Home","props","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { View, TouchableOpacity } from \"react-native\";\nimport { Text, Icon } from \"galio-framework\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { refresh } from \"../../constants/Data\";\n\nimport ActiveScreen from \"./Active\";\nimport InProgressScreen from \"./InProgress\";\nimport CompletedScreen from \"./Close\";\nimport UpdateScreen from \"./Update\";\nimport DashboardScreen from \"./Dashboard\";\n\nconst Tab = createBottomTabNavigator();\n\nfunction MyTabBar({ state, descriptors, navigation }) {\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n        borderTopWidth: 1,\n        borderTopColor: \"#DCDCDC\",\n      }}\n    >\n      {state.routes.map((route, index) => {\n        const { options } = descriptors[route.key];\n        const label =\n          options.tabBarLabel !== undefined\n            ? options.tabBarLabel\n            : options.title !== undefined\n            ? options.title\n            : route.name;\n\n        const isFocused = state.index === index;\n\n        const onPress = () => {\n          refresh();\n\n          const event = navigation.emit({\n            type: \"tabPress\",\n            target: route.key,\n          });\n\n          if (!isFocused && !event.defaultPrevented) {\n            navigation.navigate(route.name);\n          }\n        };\n\n        const onLongPress = () => {\n          navigation.emit({\n            type: \"tabLongPress\",\n            target: route.key,\n          });\n        };\n\n        return (\n          <TouchableOpacity\n            accessibilityRole=\"button\"\n            accessibilityStates={isFocused ? [\"selected\"] : []}\n            accessibilityLabel={options.tabBarAccessibilityLabel}\n            testID={options.tabBarTestID}\n            onPress={onPress}\n            onLongPress={onLongPress}\n            style={{\n              flex: 1,\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              height: 50,\n            }}\n          >\n            <Icon\n              name={\n                label === \"Home\"\n                  ? \"ios-home\"\n                  : label === \"Update\"\n                  ? \"ios-arrow-down\"\n                  : label === \"Active\"\n                  ? \"ios-open\"\n                  : label === \"In Progress\"\n                  ? \"ios-book\"\n                  : label === \"Completed\"\n                  ? \"ios-cloud-done\"\n                  : \"\"\n              }\n              family=\"Ionicon\"\n              size={25}\n              color={isFocused ? \"red\" : \"#888888\"}\n              style={{ marginTop: 5 }}\n            />\n            <Text\n              style={{\n                color: isFocused ? \"red\" : \"#888888\",\n                fontSize: 12,\n                flex: 1,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              {label}\n            </Text>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n}\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Tab.Navigator tabBar={(props) => <MyTabBar {...props} />}>\n        <Tab.Screen name=\"Home\" component={DashboardScreen} />\n        <Tab.Screen name=\"Update\" component={UpdateScreen} />\n        <Tab.Screen name=\"Active\" component={ActiveScreen} />\n        <Tab.Screen name=\"In Progress\" component={InProgressScreen} />\n        <Tab.Screen name=\"Completed\" component={CompletedScreen} />\n      </Tab.Navigator>\n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}