{"version":3,"sources":["Demo/Other/AddModerator.js","App/components/MainCard.js","store/ApiKeys.js","store/data.js"],"names":["AddModerator","props","state","name","email","moderatorsEmail","moderatorsName","submitHandle","writeNewPost","alert","setState","showModerator","getModerators","then","result","Object","keys","values","showEmail","map","showName","firebase","length","ApiKeys","FirebaseConfig","postData","updates","ref","child","push","key","update","title","Body","md","Group","controlId","Label","Control","type","placeholder","onChange","text","target","value","this","variant","onClick","responsive","Component","MainCard","isOption","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setInterval","cardRemoveHandler","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","className","alignRight","Toggle","id","Menu","as","Item","prevState","href","DEMO","BLANK_LINK","Header","Title","position","top","left","right","width","windowWidth","height","windowHeight","join","style","in","children","windowSize","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getData","a","data","Map","once","snapshot","forEach","childSnapshot","actualSnapshot","userData","val","set","getJanTv","getUpdate"],"mappings":"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","file":"static/js/20.5461c99c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Row, Col, Form, Button, Card, Table } from \"react-bootstrap\";\nimport Aux from \"../../hoc/_Aux\";\nimport MainCard from \"../../App/components/MainCard\";\nimport * as firebase from \"firebase\";\nimport { getModerators } from \"../../store/data\";\nimport ApiKeys from \"../../store/ApiKeys\";\n\nclass AddModerator extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    moderatorsEmail: [],\n    moderatorsName: [],\n  };\n\n  constructor(props) {\n    super(props);\n    \n    if (!firebase.apps.length) {\n      firebase.initializeApp(ApiKeys.FirebaseConfig);\n    }\n\n    this.showModerator();\n  }\n\n  submitHandle = () => {\n    if (this.state.email === \"\" || this.state.name === \"\") {\n      alert(\"Please all fields!\");\n      return;\n    }\n    this.writeNewPost(this.state.email, this.state.name);\n    alert(\"Moderator Added!\");\n    this.setState({ name: \"\", email: \"\" });\n  };\n\n  writeNewPost(email, name) {\n    var postData = {\n      name: name,\n      email: email,\n    };\n\n    var newPostKey = firebase\n      .database()\n      .ref()\n      .child(\"loginType/moderator/\")\n      .push().key;\n    var updates = {};\n    updates[\"loginType/moderator/\" + newPostKey] = postData;\n\n    return firebase.database().ref().update(updates);\n  }\n\n  showModerator = () => {\n    var updateData = getModerators();\n    updateData.then((result) => {\n      this.setState({\n        moderatorsEmail: Object.keys(result),\n        moderatorsName: Object.values(result),\n      });\n    });\n  };\n\n  showEmail = () => {\n    return this.state.moderatorsEmail.map((email) => <tr>{email}</tr>);\n  };\n\n  showName = () => {\n    return this.state.moderatorsName.map((name) => <tr>{name}</tr>);\n  };\n\n  render() {\n    return (\n      <Aux>\n        <Row>\n          <Col>\n            <MainCard title=\"Add Moderator\">\n              <Card.Body>\n                <Row>\n                  <Col md={6}>\n                    <Form>\n                      <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Name\"\n                          onChange={(text) => {\n                            this.setState({ name: text.target.value });\n                          }}\n                          value={this.state.name}\n                        />\n                      </Form.Group>\n                      <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control\n                          type=\"email\"\n                          placeholder=\"Email\"\n                          onChange={(text) => {\n                            this.setState({ email: text.target.value });\n                          }}\n                          value={this.state.email}\n                        />\n                      </Form.Group>\n                      <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" />\n                      </Form.Group>\n                      <Button variant=\"primary\" onClick={this.submitHandle}>\n                        Submit\n                      </Button>\n                    </Form>\n                  </Col>\n                </Row>\n              </Card.Body>\n            </MainCard>\n            <MainCard title=\"Moderators List\">\n              <Table responsive>\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Email</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <td>{this.showName()}</td>\n                  <td>{this.showEmail()}</td>\n                </tbody>\n              </Table>\n            </MainCard>\n          </Col>\n        </Row>\n      </Aux>\n    );\n  }\n}\n\nexport default AddModerator;\n","import React, {Component} from 'react';\r\nimport {Dropdown, Card, Collapse} from 'react-bootstrap';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport DEMO from \"../../store/constant\";\r\n\r\nclass MainCard extends Component {\r\n    state = {\r\n        isOption: this.props.isOption,\r\n        fullCard: false,\r\n        collapseCard: false,\r\n        loadCard: false,\r\n        cardRemove: false\r\n    };\r\n\r\n    cardReloadHandler = () => {\r\n        this.setState({loadCard: true});\r\n        setInterval(() => {\r\n            this.setState({loadCard: false});\r\n        }, 3000);\r\n    };\r\n\r\n    cardRemoveHandler = () => {\r\n        this.setState({cardRemove: true});\r\n    };\r\n\r\n    render() {\r\n        let fullScreenStyle, loader, cardHeaderRight, cardHeader;\r\n        let card = '';\r\n        let cardClass = [];\r\n\r\n        if (this.state.isOption) {\r\n            cardHeaderRight = (\r\n                <div className=\"card-header-right\">\r\n                    <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n                        <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n                            <i className=\"feather icon-more-horizontal\"/>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu as='ul' className=\"list-unstyled card-option\">\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {fullCard: !prevState.fullCard}})}}>\r\n                                <i className={this.state.fullCard ? 'feather icon-minimize' : 'feather icon-maximize'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.fullCard ? 'Restore' : 'Maximize'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {collapseCard: !prevState.collapseCard}})}}>\r\n                                <i className={this.state.collapseCard ? 'feather icon-plus' : 'feather icon-minus'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.collapseCard ? 'Expand' : 'Collapse'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardReloadHandler}>\r\n                                <i className='feather icon-refresh-cw'/>\r\n                                <a href={DEMO.BLANK_LINK}> Reload </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardRemoveHandler}>\r\n                                <i className='feather icon-trash'/>\r\n                                <a href={DEMO.BLANK_LINK}> Remove </a>\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        cardHeader = (\r\n            <Card.Header>\r\n                <Card.Title as='h5'>{this.props.title}</Card.Title>\r\n                {cardHeaderRight}\r\n            </Card.Header>\r\n        );\r\n\r\n        if (this.state.fullCard) {\r\n            cardClass = [...cardClass, 'full-card'];\r\n            fullScreenStyle = {position: 'fixed', top: 0, left: 0, right: 0, width: this.props.windowWidth, height: this.props.windowHeight};\r\n        }\r\n\r\n        if (this.state.loadCard) {\r\n            cardClass = [...cardClass, 'card-load'];\r\n            loader = (\r\n                <div className=\"card-loader\">\r\n                    <i className=\"pct-loader1 anim-rotate\"/>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.cardRemove) {\r\n            cardClass = [...cardClass, 'd-none'];\r\n        }\r\n\r\n        if (this.props.cardClass) {\r\n            cardClass = [...cardClass, this.props.cardClass];\r\n        }\r\n\r\n        card = (\r\n            <Card className={cardClass.join(' ')} style={fullScreenStyle}>\r\n                {cardHeader}\r\n                <Collapse in={!this.state.collapseCard}>\r\n                    <div>\r\n                        <Card.Body>\r\n                            {this.props.children}\r\n                        </Card.Body>\r\n                    </div>\r\n                </Collapse>\r\n                {loader}\r\n            </Card>\r\n        );\r\n\r\n        return (\r\n            <Aux>\r\n                {card}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default windowSize(MainCard);\r\n","export default {\n  FirebaseConfig: {\n    apiKey: \"AIzaSyC3QKpKMrZVIF8OFxnvAVb9vb2-WlvsK-w\",\n    authDomain: \"neeti-zen.firebaseapp.com\",\n    databaseURL: \"https://neeti-zen.firebaseio.com\",\n    projectId: \"neeti-zen\",\n    storageBucket: \"neeti-zen.appspot.com\",\n    messagingSenderId: \"443320781102\",\n    appId: \"1:443320781102:web:1fec946384865a5cce12bf\",\n    measurementId: \"G-D1HTV3Y8EL\",\n  },\n};\n","import * as firebase from \"firebase\";\n\nexport async function getData() {\n  let data = new Map();\n  await firebase\n    .database()\n    .ref(\"users/SR7gsON7QIUcskVh5IXVhaeOPk13/complaints/\")\n    .once(\"value\")\n    .then(function (snapshot) {\n      snapshot.forEach((childSnapshot) => {\n        childSnapshot.forEach((actualSnapshot) => {\n          var userData = Object.values(actualSnapshot.val());\n          data.set(userData[1], userData[0]);\n        });\n      });\n    });\n  return data;\n}\n\nexport async function getModerators() {\n  let data = {};\n  await firebase\n    .database()\n    .ref(\"loginType/moderator/\")\n    .once(\"value\")\n    .then(function (snapshot) {\n      snapshot.forEach((childSnapshot) => {\n        data[childSnapshot.val()[\"email\"]] = childSnapshot.val()[\"name\"];\n      });\n    });\n  return data;\n}\n\nexport async function getJanTv() {\n  let data = {};\n  await firebase\n    .database()\n    .ref(\"jantv/\")\n    .once(\"value\")\n    .then(function (snapshot) {\n      snapshot.forEach((childSnapshot) => {\n        data[childSnapshot.key] = childSnapshot.val();\n      });\n    });\n  return data;\n}\n\nexport async function getUpdate() {\n  let data = {};\n  await firebase\n    .database()\n    .ref(\"update/\")\n    .once(\"value\")\n    .then(function (snapshot) {\n      snapshot.forEach((childSnapshot) => {\n        data[childSnapshot.key] = childSnapshot.val();\n      });\n    });\n  return data;\n}\n"],"sourceRoot":""}