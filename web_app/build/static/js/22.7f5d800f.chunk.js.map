{"version":3,"sources":["Demo/Other/Mplad.js","App/components/MainCard.js","store/ApiKeys.js","store/data.js"],"names":["Mplad","props","state","fileUrl","note","selectedFile","mpladData","submitHandle","FormData","append","uploadFile","alert","a","firebase","ref","storageRef","mainFile","child","name","put","then","snapshot","getDownloadURL","url","setState","writeNewPost","fileName","postData","newPostKey","push","key","updates","update","showMplad","getMplad","result","console","log","Object","values","onChangeHandler","event","target","files","loaded","length","ApiKeys","FirebaseConfig","title","isOption","Body","md","Label","className","aria-describedby","type","onChange","this","Group","controlId","Control","placeholder","text","value","as","rows","variant","onClick","responsive","map","res","href","Component","MainCard","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setInterval","cardRemoveHandler","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","alignRight","Toggle","id","Menu","Item","prevState","DEMO","BLANK_LINK","Header","Title","position","top","left","right","width","windowWidth","height","windowHeight","join","style","in","children","windowSize","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getData","data","Map","once","forEach","childSnapshot","actualSnapshot","userData","val","set","getModerators","getJanTv","getUpdate"],"mappings":"oSAiBMA,E,kDAQJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IARRC,MAAQ,CACNC,QAAS,GACTC,KAAM,GACNC,aAAc,KACdC,UAAW,IAGM,EAUnBC,aAAe,WACmB,OAA5B,EAAKL,MAAMG,cAA6C,KAApB,EAAKH,MAAME,OAKtC,IAAII,UACZC,OAAO,OAAQ,EAAKP,MAAMG,cAE/B,EAAKK,aAELC,MAAM,yBATJA,MAAM,uBAZS,EAwBnBD,WAxBmB,sBAwBN,8BAAAE,EAAA,sEACcC,YAAmBC,MADjC,OACLC,EADK,QAELC,EAAWD,EAAWE,MAC1B,eAAiB,EAAKf,MAAMG,aAAaa,OAElCC,IAAI,EAAKjB,MAAMG,cAAce,MAAK,SAACC,GAC1CL,EAASM,iBAAiBF,MAAK,SAACG,GAC9B,EAAKC,SAAS,CAAErB,QAASoB,IACzB,EAAKE,aAAaF,EAAK,EAAKrB,MAAME,KAAM,EAAKF,MAAMG,aAAaa,YARzD,2CAxBM,EAqCnBO,aArCmB,uCAqCJ,WAAOtB,EAASC,EAAMsB,GAAtB,mBAAAd,EAAA,6DACTe,EAAW,CACbxB,QAASA,EACTuB,SAAUA,EACVtB,KAAMA,GAGJwB,EAAaf,aAAoBC,MAAMG,MAAM,UAAUY,OAAOC,KAC9DC,EAAU,IACN,SAAWH,GAAcD,EAEjC,EAAKH,SAAS,CAAErB,QAAS,GAAIC,KAAM,KAXtB,SAaAS,aAAoBC,MAAMkB,OAAOD,GAbjC,mFArCI,4DAqDnBE,UAAY,WACQC,cACNd,MAAK,SAACe,GAChBC,QAAQC,IAAIC,OAAOC,OAAOJ,IAC1B,EAAKX,SAAS,CACZlB,UAAWgC,OAAOC,OAAOJ,SA1DZ,EA+DnBK,gBAAkB,SAACC,GACjB,EAAKjB,SAAS,CACZnB,aAAcoC,EAAMC,OAAOC,MAAM,GACjCC,OAAQ,KA/DL/B,OAAcgC,QACjBhC,gBAAuBiC,IAAQC,gBAGjC,EAAKd,YAPY,E,qDAsET,IAAD,OACP,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUe,MAAM,eAAeC,UAAQ,GACrC,kBAAC,IAAKC,KAAN,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,GAAI,GACP,kBAAC,IAAD,KACE,kBAAC,IAAKC,MAAN,oBACA,kBAAC,IAAD,CAAYC,UAAU,QACpB,kBAAC,IAAD,CACEC,mBAAiB,eACjBC,KAAK,OACLC,SAAUC,KAAKjB,mBAGnB,kBAAC,IAAKkB,MAAN,CAAYC,UAAU,gCACpB,kBAAC,IAAKP,MAAN,cACA,kBAAC,IAAKQ,QAAN,CACEL,KAAK,OACLM,YAAY,wBACZL,SAAU,SAACM,GACT,EAAKtC,SAAS,CAAEpB,KAAM0D,EAAKpB,OAAOqB,SAEpCC,GAAG,WACHC,KAAK,IACLF,MAAON,KAAKvD,MAAME,QAGtB,kBAAC,IAAD,CAAQ8D,QAAQ,UAAUC,QAASV,KAAKlD,cAAxC,eAQV,kBAAC,IAAD,CAAUyC,MAAM,gBACd,kBAAC,IAAD,CAAOoB,YAAU,GACdX,KAAKvD,MAAMI,UAAU+D,KAAI,SAACC,GACzB,OACE,2BAAOxC,IAAKwC,EAAInE,SACd,6BACA,4BACE,oCACQ,IACN,uBAAGoE,KAAMD,EAAInE,QAASuC,OAAO,UAC1B4B,EAAI5C,WAGT,sCAAY4C,EAAIlE,oB,GAlIpBoE,aAgJLxE,a,qJC1JTyE,E,4MACFvE,MAAQ,CACJ+C,SAAU,EAAKhD,MAAMgD,SACrByB,UAAU,EACVC,cAAc,EACdC,UAAU,EACVC,YAAY,G,EAGhBC,kBAAoB,WAChB,EAAKtD,SAAS,CAACoD,UAAU,IACzBG,aAAY,WACR,EAAKvD,SAAS,CAACoD,UAAU,MAC1B,M,EAGPI,kBAAoB,WAChB,EAAKxD,SAAS,CAACqD,YAAY,K,uDAGrB,IACFI,EAAiBC,EAAQC,EAAiBC,EAC1CC,EAFC,OAGDC,EAAY,GA2EhB,OAzEI7B,KAAKvD,MAAM+C,WACXkC,EACI,yBAAK9B,UAAU,qBACX,kBAAC,IAAD,CAAUkC,YAAY,EAAMlC,UAAU,yBAClC,kBAAC,IAASmC,OAAV,CAAiBC,GAAG,iBAAiBpC,UAAU,YAC3C,uBAAGA,UAAU,kCAEjB,kBAAC,IAASqC,KAAV,CAAe1B,GAAG,KAAKX,UAAU,6BAC7B,kBAAC,IAASsC,KAAV,CAAe3B,GAAG,KAAKX,UAAU,gBAAgBc,QAAS,WAAO,EAAK3C,UAAS,SAAAoE,GAAc,MAAO,CAAClB,UAAWkB,EAAUlB,eACtH,uBAAGrB,UAAWI,KAAKvD,MAAMwE,SAAW,wBAA0B,0BAC9D,uBAAGH,KAAMsB,IAAKC,YAAd,IAA4BrC,KAAKvD,MAAMwE,SAAW,UAAY,WAA9D,MAEJ,kBAAC,IAASiB,KAAV,CAAe3B,GAAG,KAAKX,UAAU,gBAAgBc,QAAS,WAAO,EAAK3C,UAAS,SAAAoE,GAAc,MAAO,CAACjB,cAAeiB,EAAUjB,mBAC1H,uBAAGtB,UAAWI,KAAKvD,MAAMyE,aAAe,oBAAsB,uBAC9D,uBAAGJ,KAAMsB,IAAKC,YAAd,IAA4BrC,KAAKvD,MAAMyE,aAAe,SAAW,WAAjE,MAEJ,kBAAC,IAASgB,KAAV,CAAe3B,GAAG,KAAKX,UAAU,gBAAgBc,QAASV,KAAKqB,mBAC3D,uBAAGzB,UAAU,4BACb,uBAAGkB,KAAMsB,IAAKC,YAAd,aAEJ,kBAAC,IAASH,KAAV,CAAe3B,GAAG,KAAKX,UAAU,gBAAgBc,QAASV,KAAKuB,mBAC3D,uBAAG3B,UAAU,uBACb,uBAAGkB,KAAMsB,IAAKC,YAAd,iBAQxBV,EACI,kBAAC,IAAKW,OAAN,KACI,kBAAC,IAAKC,MAAN,CAAYhC,GAAG,MAAMP,KAAKxD,MAAM+C,OAC/BmC,GAIL1B,KAAKvD,MAAMwE,WACXY,EAAS,sBAAOA,GAAP,CAAkB,cAC3BL,EAAkB,CAACgB,SAAU,QAASC,IAAK,EAAGC,KAAM,EAAGC,MAAO,EAAGC,MAAO5C,KAAKxD,MAAMqG,YAAaC,OAAQ9C,KAAKxD,MAAMuG,eAGnH/C,KAAKvD,MAAM0E,WACXU,EAAS,sBAAOA,GAAP,CAAkB,cAC3BJ,EACI,yBAAK7B,UAAU,eACX,uBAAGA,UAAU,8BAKrBI,KAAKvD,MAAM2E,aACXS,EAAS,sBAAOA,GAAP,CAAkB,YAG3B7B,KAAKxD,MAAMqF,YACXA,EAAS,sBAAOA,GAAP,CAAkB7B,KAAKxD,MAAMqF,aAG1CD,EACI,kBAAC,IAAD,CAAMhC,UAAWiC,EAAUmB,KAAK,KAAMC,MAAOzB,GACxCG,EACD,kBAAC,IAAD,CAAUuB,IAAKlD,KAAKvD,MAAMyE,cACtB,6BACI,kBAAC,IAAKzB,KAAN,KACKO,KAAKxD,MAAM2G,YAIvB1B,GAKL,kBAAC,IAAD,KACKG,O,GApGMb,aA0GRqC,QAAWpC,I,gCCjHX,KACb1B,eAAgB,CACd+D,OAAQ,0CACRC,WAAY,4BACZC,YAAa,mCACbC,UAAW,YACXC,cAAe,wBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,kB,+OCPZ,SAAeC,IAAtB,+B,4CAAO,4BAAA1G,EAAA,6DACD2G,EAAO,IAAIC,IADV,SAEC3G,aAEHC,IAAI,kDACJ2G,KAAK,SACLrG,MAAK,SAAUC,GACdA,EAASqG,SAAQ,SAACC,GAChBA,EAAcD,SAAQ,SAACE,GACrB,IAAIC,EAAWvF,OAAOC,OAAOqF,EAAeE,OAC5CP,EAAKQ,IAAIF,EAAS,GAAIA,EAAS,aAVlC,gCAcEN,GAdF,4C,sBAiBA,SAAeS,IAAtB,+B,4CAAO,4BAAApH,EAAA,6DACD2G,EAAO,GADN,SAEC1G,aAEHC,IAAI,wBACJ2G,KAAK,SACLrG,MAAK,SAAUC,GACdA,EAASqG,SAAQ,SAACC,GAChBJ,EAAKI,EAAcG,MAAd,OAAgCH,EAAcG,MAAd,WARtC,gCAWEP,GAXF,4C,sBAcA,SAAeU,IAAtB,+B,4CAAO,4BAAArH,EAAA,6DACD2G,EAAO,GADN,SAEC1G,aAEHC,IAAI,UACJ2G,KAAK,SACLrG,MAAK,SAAUC,GACdA,EAASqG,SAAQ,SAACC,GAChBJ,EAAKI,EAAc7F,KAAO6F,EAAcG,YARzC,gCAWEP,GAXF,4C,sBAcA,SAAeW,IAAtB,+B,4CAAO,4BAAAtH,EAAA,6DACD2G,EAAO,GADN,SAEC1G,aAEHC,IAAI,WACJ2G,KAAK,SACLrG,MAAK,SAAUC,GACdA,EAASqG,SAAQ,SAACC,GAChBJ,EAAKI,EAAc7F,KAAO6F,EAAcG,YARzC,gCAWEP,GAXF,4C,sBAcA,SAAerF,IAAtB,+B,4CAAO,4BAAAtB,EAAA,6DACD2G,EAAO,GADN,SAEC1G,aAEHC,IAAI,UACJ2G,KAAK,SACLrG,MAAK,SAAUC,GACdA,EAASqG,SAAQ,SAACC,GAChBJ,EAAKI,EAAc7F,KAAO6F,EAAcG,YARzC,gCAWEP,GAXF,4C","file":"static/js/22.7f5d800f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n  Form,\n  Button,\n  InputGroup,\n  FormControl,\n  Table,\n} from \"react-bootstrap\";\nimport Aux from \"../../hoc/_Aux\";\nimport MainCard from \"../../App/components/MainCard\";\nimport ApiKeys from \"../../store/ApiKeys\";\nimport * as firebase from \"firebase\";\nimport { getMplad } from \"../../store/data\";\n\nclass Mplad extends Component {\n  state = {\n    fileUrl: \"\",\n    note: \"\",\n    selectedFile: null,\n    mpladData: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(ApiKeys.FirebaseConfig);\n    }\n\n    this.showMplad();\n  }\n\n  submitHandle = () => {\n    if (this.state.selectedFile === null || this.state.note === \"\") {\n      alert(\"Please all fields!\");\n      return;\n    }\n\n    const data = new FormData();\n    data.append(\"file\", this.state.selectedFile);\n\n    this.uploadFile();\n\n    alert(\"MPLAD Data Uploaded!\");\n  };\n\n  uploadFile = async () => {\n    const storageRef = await firebase.storage().ref();\n    const mainFile = storageRef.child(\n      \"mplad-files/\" + this.state.selectedFile.name\n    );\n    mainFile.put(this.state.selectedFile).then((snapshot) => {\n      mainFile.getDownloadURL().then((url) => {\n        this.setState({ fileUrl: url });\n        this.writeNewPost(url, this.state.note, this.state.selectedFile.name);\n      });\n    });\n  };\n\n  writeNewPost = async (fileUrl, note, fileName) => {\n    var postData = {\n      fileUrl: fileUrl,\n      fileName: fileName,\n      note: note,\n    };\n\n    var newPostKey = firebase.database().ref().child(\"mplad/\").push().key;\n    var updates = {};\n    updates[\"mplad/\" + newPostKey] = postData;\n\n    this.setState({ fileUrl: \"\", note: \"\" });\n\n    return await firebase.database().ref().update(updates);\n  };\n\n  showMplad = () => {\n    var updatedData = getMplad();\n    updatedData.then((result) => {\n      console.log(Object.values(result));\n      this.setState({\n        mpladData: Object.values(result),\n      });\n    });\n  };\n\n  onChangeHandler = (event) => {\n    this.setState({\n      selectedFile: event.target.files[0],\n      loaded: 0,\n    });\n  };\n\n  render() {\n    return (\n      <Aux>\n        <Row>\n          <Col>\n            <MainCard title=\"MPLAD Upload\" isOption>\n              <Card.Body>\n                <Row>\n                  <Col md={6}>\n                    <Form>\n                      <Form.Label>Upload File</Form.Label>\n                      <InputGroup className=\"mb-3\">\n                        <FormControl\n                          aria-describedby=\"basic-addon1\"\n                          type=\"file\"\n                          onChange={this.onChangeHandler}\n                        />\n                      </InputGroup>\n                      <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label>Notes</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Word Limit: 100 words\"\n                          onChange={(text) => {\n                            this.setState({ note: text.target.value });\n                          }}\n                          as=\"textarea\"\n                          rows=\"5\"\n                          value={this.state.note}\n                        />\n                      </Form.Group>\n                      <Button variant=\"primary\" onClick={this.submitHandle}>\n                        Submit\n                      </Button>\n                    </Form>\n                  </Col>\n                </Row>\n              </Card.Body>\n            </MainCard>\n            <MainCard title=\"Past Uploads\">\n              <Table responsive>\n                {this.state.mpladData.map((res) => {\n                  return (\n                    <tbody key={res.fileUrl}>\n                      <br />\n                      <tr>\n                        <tr>\n                          File:{\" \"}\n                          <a href={res.fileUrl} target=\"_blank\">\n                            {res.fileName}\n                          </a>\n                        </tr>\n                        <tr>Notes: {res.note}</tr>\n                      </tr>\n                    </tbody>\n                  );\n                })}\n              </Table>\n            </MainCard>\n          </Col>\n        </Row>\n      </Aux>\n    );\n  }\n}\n\nexport default Mplad;\n","import React, {Component} from 'react';\r\nimport {Dropdown, Card, Collapse} from 'react-bootstrap';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport DEMO from \"../../store/constant\";\r\n\r\nclass MainCard extends Component {\r\n    state = {\r\n        isOption: this.props.isOption,\r\n        fullCard: false,\r\n        collapseCard: false,\r\n        loadCard: false,\r\n        cardRemove: false\r\n    };\r\n\r\n    cardReloadHandler = () => {\r\n        this.setState({loadCard: true});\r\n        setInterval(() => {\r\n            this.setState({loadCard: false});\r\n        }, 3000);\r\n    };\r\n\r\n    cardRemoveHandler = () => {\r\n        this.setState({cardRemove: true});\r\n    };\r\n\r\n    render() {\r\n        let fullScreenStyle, loader, cardHeaderRight, cardHeader;\r\n        let card = '';\r\n        let cardClass = [];\r\n\r\n        if (this.state.isOption) {\r\n            cardHeaderRight = (\r\n                <div className=\"card-header-right\">\r\n                    <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n                        <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n                            <i className=\"feather icon-more-horizontal\"/>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu as='ul' className=\"list-unstyled card-option\">\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {fullCard: !prevState.fullCard}})}}>\r\n                                <i className={this.state.fullCard ? 'feather icon-minimize' : 'feather icon-maximize'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.fullCard ? 'Restore' : 'Maximize'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {collapseCard: !prevState.collapseCard}})}}>\r\n                                <i className={this.state.collapseCard ? 'feather icon-plus' : 'feather icon-minus'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.collapseCard ? 'Expand' : 'Collapse'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardReloadHandler}>\r\n                                <i className='feather icon-refresh-cw'/>\r\n                                <a href={DEMO.BLANK_LINK}> Reload </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardRemoveHandler}>\r\n                                <i className='feather icon-trash'/>\r\n                                <a href={DEMO.BLANK_LINK}> Remove </a>\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        cardHeader = (\r\n            <Card.Header>\r\n                <Card.Title as='h5'>{this.props.title}</Card.Title>\r\n                {cardHeaderRight}\r\n            </Card.Header>\r\n        );\r\n\r\n        if (this.state.fullCard) {\r\n            cardClass = [...cardClass, 'full-card'];\r\n            fullScreenStyle = {position: 'fixed', top: 0, left: 0, right: 0, width: this.props.windowWidth, height: this.props.windowHeight};\r\n        }\r\n\r\n        if (this.state.loadCard) {\r\n            cardClass = [...cardClass, 'card-load'];\r\n            loader = (\r\n                <div className=\"card-loader\">\r\n                    <i className=\"pct-loader1 anim-rotate\"/>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.cardRemove) {\r\n            cardClass = [...cardClass, 'd-none'];\r\n        }\r\n\r\n        if (this.props.cardClass) {\r\n            cardClass = [...cardClass, this.props.cardClass];\r\n        }\r\n\r\n        card = (\r\n            <Card className={cardClass.join(' ')} style={fullScreenStyle}>\r\n                {cardHeader}\r\n                <Collapse in={!this.state.collapseCard}>\r\n                    <div>\r\n                        <Card.Body>\r\n                            {this.props.children}\r\n                        </Card.Body>\r\n                    </div>\r\n                </Collapse>\r\n                {loader}\r\n            </Card>\r\n        );\r\n\r\n        return (\r\n            <Aux>\r\n                {card}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default windowSize(MainCard);\r\n","export default {\n  FirebaseConfig: {\n    apiKey: \"AIzaSyC3QKpKMrZVIF8OFxnvAVb9vb2-WlvsK-w\",\n    authDomain: \"neeti-zen.firebaseapp.com\",\n    databaseURL: \"https://neeti-zen.firebaseio.com\",\n    projectId: \"neeti-zen\",\n    storageBucket: \"neeti-zen.appspot.com\",\n    messagingSenderId: \"443320781102\",\n    appId: \"1:443320781102:web:1fec946384865a5cce12bf\",\n    measurementId: \"G-D1HTV3Y8EL\",\n  },\n};\n","import * as firebase from \"firebase\";\n\nexport async function getData() {\n  let data = new Map();\n  await firebase\n    .database()\n    .ref(\"users/SR7gsON7QIUcskVh5IXVhaeOPk13/complaints/\")\n    .once(\"value\")\n    .then(function (snapshot) {\n      snapshot.forEach((childSnapshot) => {\n        childSnapshot.forEach((actualSnapshot) => {\n          var userData = Object.values(actualSnapshot.val());\n          data.set(userData[1], userData[0]);\n        });\n      });\n    });\n  return data;\n}\n\nexport async function getModerators() {\n  let data = {};\n  await firebase\n    .database()\n    .ref(\"loginType/moderator/\")\n    .once(\"value\")\n    .then(function (snapshot) {\n      snapshot.forEach((childSnapshot) => {\n        data[childSnapshot.val()[\"email\"]] = childSnapshot.val()[\"name\"];\n      });\n    });\n  return data;\n}\n\nexport async function getJanTv() {\n  let data = {};\n  await firebase\n    .database()\n    .ref(\"jantv/\")\n    .once(\"value\")\n    .then(function (snapshot) {\n      snapshot.forEach((childSnapshot) => {\n        data[childSnapshot.key] = childSnapshot.val();\n      });\n    });\n  return data;\n}\n\nexport async function getUpdate() {\n  let data = {};\n  await firebase\n    .database()\n    .ref(\"update/\")\n    .once(\"value\")\n    .then(function (snapshot) {\n      snapshot.forEach((childSnapshot) => {\n        data[childSnapshot.key] = childSnapshot.val();\n      });\n    });\n  return data;\n}\n\nexport async function getMplad() {\n  let data = {};\n  await firebase\n    .database()\n    .ref(\"mplad/\")\n    .once(\"value\")\n    .then(function (snapshot) {\n      snapshot.forEach((childSnapshot) => {\n        data[childSnapshot.key] = childSnapshot.val();\n      });\n    });\n  return data;\n}\n"],"sourceRoot":""}