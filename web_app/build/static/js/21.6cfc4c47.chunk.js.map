{"version":3,"sources":["Demo/Other/JanTv.js","App/components/MainCard.js","store/ApiKeys.js","store/data.js"],"names":["JanTv","props","state","type","link","note","jantvData","submitHandle","writeNewPost","alert","setState","showJantv","getJanTv","then","result","Object","values","firebase","length","ApiKeys","FirebaseConfig","postData","updates","ref","child","push","key","update","title","Body","md","Group","controlId","Label","Control","as","onChange","text","target","value","this","placeholder","rows","variant","onClick","responsive","map","res","href","Component","MainCard","isOption","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setInterval","cardRemoveHandler","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","className","alignRight","Toggle","id","Menu","Item","prevState","DEMO","BLANK_LINK","Header","Title","position","top","left","right","width","windowWidth","height","windowHeight","join","style","in","children","windowSize","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getData","a","data","Map","once","snapshot","forEach","childSnapshot","actualSnapshot","userData","val","set","getModerators","getUpdate","getMplad"],"mappings":"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","file":"static/js/21.6cfc4c47.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Row, Col, Form, Button, Card, Table } from \"react-bootstrap\";\nimport Aux from \"../../hoc/_Aux\";\nimport MainCard from \"../../App/components/MainCard\";\nimport ApiKeys from \"../../store/ApiKeys\";\nimport * as firebase from \"firebase\";\nimport { getJanTv } from \"../../store/data\";\n\nclass JanTv extends Component {\n  state = {\n    type: \"Parliament\",\n    link: \"\",\n    note: \"\",\n    jantvData: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(ApiKeys.FirebaseConfig);\n    }\n\n    this.showJantv();\n  }\n\n  submitHandle = () => {\n    if (\n      this.state.type === \"\" ||\n      this.state.link === \"\" ||\n      this.state.note === \"\"\n    ) {\n      alert(\"Please all fields!\");\n      return;\n    }\n    this.writeNewPost(this.state.type, this.state.link, this.state.note);\n    alert(\"JAN TV Data Uploaded!\");\n    this.setState({ type: \"\", link: \"\", note: \"\" });\n  };\n\n  writeNewPost(type, link, note) {\n    var postData = {\n      type: type,\n      link: link,\n      note: note,\n    };\n\n    var newPostKey = firebase.database().ref().child(\"jantv/\").push().key;\n    var updates = {};\n    updates[\"jantv/\" + newPostKey] = postData;\n\n    return firebase.database().ref().update(updates);\n  }\n\n  showJantv = () => {\n    var updatedData = getJanTv();\n    updatedData.then((result) => {\n      this.setState({\n        jantvData: Object.values(result),\n      });\n    });\n  };\n\n  render() {\n    return (\n      <Aux>\n        <Row>\n          <Col>\n            <MainCard title=\"Jan TV Link\">\n              <Card.Body>\n                <Row>\n                  <Col md={6}>\n                    <Form>\n                      <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                        <Form.Label>Upload Type</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          onChange={(text) => {\n                            this.setState({ type: text.target.value });\n                          }}\n                          value={this.state.type}\n                        >\n                          <option>Parliament</option>\n                          <option>Other</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        <Form.Label>Link</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Link\"\n                          onChange={(text) => {\n                            this.setState({ link: text.target.value });\n                          }}\n                          value={this.state.link}\n                        />\n                      </Form.Group>\n                      <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label>Notes</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Word Limit: 100 words\"\n                          onChange={(text) => {\n                            this.setState({ note: text.target.value });\n                          }}\n                          as=\"textarea\"\n                          rows=\"5\"\n                          value={this.state.note}\n                        />\n                      </Form.Group>\n                      <Button variant=\"primary\" onClick={this.submitHandle}>\n                        Submit\n                      </Button>\n                    </Form>\n                  </Col>\n                </Row>\n              </Card.Body>\n            </MainCard>\n            <MainCard title=\"Past Uploads\">\n              <Table responsive>\n                {this.state.jantvData.map((res) => {\n                  return (\n                    <tbody key={res.link}>\n                      <br />\n                      <tr>\n                        <tr>Type: {res.type}</tr>\n                        <tr>\n                          Link:{\" \"}\n                          <a href={res.link} target=\"_blank\">\n                            {res.link}\n                          </a>\n                        </tr>\n                        <tr>Note: {res.note}</tr>\n                      </tr>\n                    </tbody>\n                  );\n                })}\n              </Table>\n            </MainCard>\n          </Col>\n        </Row>\n      </Aux>\n    );\n  }\n}\n\nexport default JanTv;\n","import React, {Component} from 'react';\r\nimport {Dropdown, Card, Collapse} from 'react-bootstrap';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport DEMO from \"../../store/constant\";\r\n\r\nclass MainCard extends Component {\r\n    state = {\r\n        isOption: this.props.isOption,\r\n        fullCard: false,\r\n        collapseCard: false,\r\n        loadCard: false,\r\n        cardRemove: false\r\n    };\r\n\r\n    cardReloadHandler = () => {\r\n        this.setState({loadCard: true});\r\n        setInterval(() => {\r\n            this.setState({loadCard: false});\r\n        }, 3000);\r\n    };\r\n\r\n    cardRemoveHandler = () => {\r\n        this.setState({cardRemove: true});\r\n    };\r\n\r\n    render() {\r\n        let fullScreenStyle, loader, cardHeaderRight, cardHeader;\r\n        let card = '';\r\n        let cardClass = [];\r\n\r\n        if (this.state.isOption) {\r\n            cardHeaderRight = (\r\n                <div className=\"card-header-right\">\r\n                    <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n                        <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n                            <i className=\"feather icon-more-horizontal\"/>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu as='ul' className=\"list-unstyled card-option\">\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {fullCard: !prevState.fullCard}})}}>\r\n                                <i className={this.state.fullCard ? 'feather icon-minimize' : 'feather icon-maximize'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.fullCard ? 'Restore' : 'Maximize'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {collapseCard: !prevState.collapseCard}})}}>\r\n                                <i className={this.state.collapseCard ? 'feather icon-plus' : 'feather icon-minus'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.collapseCard ? 'Expand' : 'Collapse'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardReloadHandler}>\r\n                                <i className='feather icon-refresh-cw'/>\r\n                                <a href={DEMO.BLANK_LINK}> Reload </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardRemoveHandler}>\r\n                                <i className='feather icon-trash'/>\r\n                                <a href={DEMO.BLANK_LINK}> Remove </a>\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        cardHeader = (\r\n            <Card.Header>\r\n                <Card.Title as='h5'>{this.props.title}</Card.Title>\r\n                {cardHeaderRight}\r\n            </Card.Header>\r\n        );\r\n\r\n        if (this.state.fullCard) {\r\n            cardClass = [...cardClass, 'full-card'];\r\n            fullScreenStyle = {position: 'fixed', top: 0, left: 0, right: 0, width: this.props.windowWidth, height: this.props.windowHeight};\r\n        }\r\n\r\n        if (this.state.loadCard) {\r\n            cardClass = [...cardClass, 'card-load'];\r\n            loader = (\r\n                <div className=\"card-loader\">\r\n                    <i className=\"pct-loader1 anim-rotate\"/>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.cardRemove) {\r\n            cardClass = [...cardClass, 'd-none'];\r\n        }\r\n\r\n        if (this.props.cardClass) {\r\n            cardClass = [...cardClass, this.props.cardClass];\r\n        }\r\n\r\n        card = (\r\n            <Card className={cardClass.join(' ')} style={fullScreenStyle}>\r\n                {cardHeader}\r\n                <Collapse in={!this.state.collapseCard}>\r\n                    <div>\r\n                        <Card.Body>\r\n                            {this.props.children}\r\n                        </Card.Body>\r\n                    </div>\r\n                </Collapse>\r\n                {loader}\r\n            </Card>\r\n        );\r\n\r\n        return (\r\n            <Aux>\r\n                {card}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default windowSize(MainCard);\r\n","export default {\n  FirebaseConfig: {\n    apiKey: \"AIzaSyC3QKpKMrZVIF8OFxnvAVb9vb2-WlvsK-w\",\n    authDomain: \"neeti-zen.firebaseapp.com\",\n    databaseURL: \"https://neeti-zen.firebaseio.com\",\n    projectId: \"neeti-zen\",\n    storageBucket: \"neeti-zen.appspot.com\",\n    messagingSenderId: \"443320781102\",\n    appId: \"1:443320781102:web:1fec946384865a5cce12bf\",\n    measurementId: \"G-D1HTV3Y8EL\",\n  },\n};\n","import * as firebase from \"firebase\";\n\nexport async function getData() {\n  let data = new Map();\n  await firebase\n    .database()\n    .ref(\"users/SR7gsON7QIUcskVh5IXVhaeOPk13/complaints/\")\n    .once(\"value\")\n    .then(function (snapshot) {\n      snapshot.forEach((childSnapshot) => {\n        childSnapshot.forEach((actualSnapshot) => {\n          var userData = Object.values(actualSnapshot.val());\n          data.set(userData[1], userData[0]);\n        });\n      });\n    });\n  return data;\n}\n\nexport async function getModerators() {\n  let data = {};\n  await firebase\n    .database()\n    .ref(\"loginType/moderator/\")\n    .once(\"value\")\n    .then(function (snapshot) {\n      snapshot.forEach((childSnapshot) => {\n        data[childSnapshot.val()[\"email\"]] = childSnapshot.val()[\"name\"];\n      });\n    });\n  return data;\n}\n\nexport async function getJanTv() {\n  let data = {};\n  await firebase\n    .database()\n    .ref(\"jantv/\")\n    .once(\"value\")\n    .then(function (snapshot) {\n      snapshot.forEach((childSnapshot) => {\n        data[childSnapshot.key] = childSnapshot.val();\n      });\n    });\n  return data;\n}\n\nexport async function getUpdate() {\n  let data = {};\n  await firebase\n    .database()\n    .ref(\"update/\")\n    .once(\"value\")\n    .then(function (snapshot) {\n      snapshot.forEach((childSnapshot) => {\n        data[childSnapshot.key] = childSnapshot.val();\n      });\n    });\n  return data;\n}\n\nexport async function getMplad() {\n  let data = {};\n  await firebase\n    .database()\n    .ref(\"mplad/\")\n    .once(\"value\")\n    .then(function (snapshot) {\n      snapshot.forEach((childSnapshot) => {\n        data[childSnapshot.key] = childSnapshot.val();\n      });\n    });\n  return data;\n}\n"],"sourceRoot":""}